<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.2" created="2012-12-08 22:10" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>w0ng&#039;s Arch Linux Blog</title>
	<link>http://archlinux.me/w0ng</link>
	<description>Just another Arch Linux Blog site</description>
	<pubDate>Sat, 08 Dec 2012 22:10:28 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://archlinux.me/</wp:base_site_url>
	<wp:base_blog_url>http://archlinux.me/w0ng</wp:base_blog_url>

	<wp:author><wp:author_id>57</wp:author_id><wp:author_login>w0ng</wp:author_login><wp:author_email>akamchoiw@gmail.com</wp:author_email><wp:author_display_name><![CDATA[w0ng]]></wp:author_display_name><wp:author_first_name><![CDATA[Andrew]]></wp:author_first_name><wp:author_last_name><![CDATA[Wong]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Linux]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>38</wp:term_id><wp:tag_slug>alsa</wp:tag_slug><wp:tag_name><![CDATA[alsa]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>44</wp:term_id><wp:tag_slug>audio</wp:tag_slug><wp:tag_name><![CDATA[audio]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>41</wp:term_id><wp:tag_slug>automatic</wp:tag_slug><wp:tag_name><![CDATA[automatic]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>bot</wp:tag_slug><wp:tag_name><![CDATA[bot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>51</wp:term_id><wp:tag_slug>cfq</wp:tag_slug><wp:tag_name><![CDATA[cfq]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>77</wp:term_id><wp:tag_slug>clip-zip</wp:tag_slug><wp:tag_name><![CDATA[clip zip]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>71</wp:term_id><wp:tag_slug>colorscheme</wp:tag_slug><wp:tag_name><![CDATA[colorscheme]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>colour</wp:tag_slug><wp:tag_name><![CDATA[colour]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>cousine</wp:tag_slug><wp:tag_name><![CDATA[cousine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>64</wp:term_id><wp:tag_slug>css</wp:tag_slug><wp:tag_name><![CDATA[css]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>cursor</wp:tag_slug><wp:tag_name><![CDATA[cursor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>49</wp:term_id><wp:tag_slug>deadline</wp:tag_slug><wp:tag_name><![CDATA[deadline]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>42</wp:term_id><wp:tag_slug>default</wp:tag_slug><wp:tag_name><![CDATA[default]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>dircolors</wp:tag_slug><wp:tag_name><![CDATA[dircolors]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>dwm</wp:tag_slug><wp:tag_name><![CDATA[dwm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>eggdrop</wp:tag_slug><wp:tag_name><![CDATA[eggdrop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>81</wp:term_id><wp:tag_slug>flash</wp:tag_slug><wp:tag_name><![CDATA[flash]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>65</wp:term_id><wp:tag_slug>fonts</wp:tag_slug><wp:tag_name><![CDATA[fonts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>67</wp:term_id><wp:tag_slug>gist</wp:tag_slug><wp:tag_name><![CDATA[gist]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>66</wp:term_id><wp:tag_slug>gist-io</wp:tag_slug><wp:tag_name><![CDATA[gist.io]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>63</wp:term_id><wp:tag_slug>github</wp:tag_slug><wp:tag_name><![CDATA[github]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>52</wp:term_id><wp:tag_slug>gpt</wp:tag_slug><wp:tag_name><![CDATA[gpt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>53</wp:term_id><wp:tag_slug>grub2</wp:tag_slug><wp:tag_name><![CDATA[grub2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>40</wp:term_id><wp:tag_slug>headset</wp:tag_slug><wp:tag_name><![CDATA[headset]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>70</wp:term_id><wp:tag_slug>hybrid</wp:tag_slug><wp:tag_name><![CDATA[hybrid]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>ipython</wp:tag_slug><wp:tag_name><![CDATA[ipython]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>irc</wp:tag_slug><wp:tag_name><![CDATA[irc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>55</wp:term_id><wp:tag_slug>irssi</wp:tag_slug><wp:tag_name><![CDATA[irssi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>73</wp:term_id><wp:tag_slug>jellybeans</wp:tag_slug><wp:tag_name><![CDATA[jellybeans]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>lines</wp:tag_slug><wp:tag_name><![CDATA[lines]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>80</wp:term_id><wp:tag_slug>livestream</wp:tag_slug><wp:tag_name><![CDATA[livestream]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>long</wp:tag_slug><wp:tag_name><![CDATA[long]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>78</wp:term_id><wp:tag_slug>manual</wp:tag_slug><wp:tag_name><![CDATA[manual]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>68</wp:term_id><wp:tag_slug>markdown</wp:tag_slug><wp:tag_name><![CDATA[markdown]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>57</wp:term_id><wp:tag_slug>mode</wp:tag_slug><wp:tag_name><![CDATA[mode]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>82</wp:term_id><wp:tag_slug>mplayer</wp:tag_slug><wp:tag_name><![CDATA[mplayer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>50</wp:term_id><wp:tag_slug>noop</wp:tag_slug><wp:tag_name><![CDATA[noop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>62</wp:term_id><wp:tag_slug>pentadactyl</wp:tag_slug><wp:tag_name><![CDATA[pentadactyl]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>pretty</wp:tag_slug><wp:tag_name><![CDATA[pretty]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>prompt</wp:tag_slug><wp:tag_name><![CDATA[prompt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>python2</wp:tag_slug><wp:tag_name><![CDATA[python2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>75</wp:term_id><wp:tag_slug>rockbox</wp:tag_slug><wp:tag_name><![CDATA[rockbox]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>83</wp:term_id><wp:tag_slug>rtmpdump</wp:tag_slug><wp:tag_name><![CDATA[rtmpdump]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>84</wp:term_id><wp:tag_slug>rtmpsrv</wp:tag_slug><wp:tag_name><![CDATA[rtmpsrv]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>79</wp:term_id><wp:tag_slug>sandisk</wp:tag_slug><wp:tag_name><![CDATA[sandisk]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>76</wp:term_id><wp:tag_slug>sansa</wp:tag_slug><wp:tag_name><![CDATA[sansa]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>47</wp:term_id><wp:tag_slug>scheduler</wp:tag_slug><wp:tag_name><![CDATA[scheduler]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>56</wp:term_id><wp:tag_slug>script</wp:tag_slug><wp:tag_name><![CDATA[script]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>semicolon</wp:tag_slug><wp:tag_name><![CDATA[semicolon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>setup</wp:tag_slug><wp:tag_name><![CDATA[setup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>slow</wp:tag_slug><wp:tag_name><![CDATA[slow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>solarized</wp:tag_slug><wp:tag_name><![CDATA[solarized]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>45</wp:term_id><wp:tag_slug>sound</wp:tag_slug><wp:tag_name><![CDATA[sound]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>46</wp:term_id><wp:tag_slug>ssd</wp:tag_slug><wp:tag_name><![CDATA[ssd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>status</wp:tag_slug><wp:tag_name><![CDATA[status]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>statusbar</wp:tag_slug><wp:tag_name><![CDATA[statusbar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>43</wp:term_id><wp:tag_slug>switch</wp:tag_slug><wp:tag_name><![CDATA[switch]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>syntax</wp:tag_slug><wp:tag_name><![CDATA[syntax]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>54</wp:term_id><wp:tag_slug>systemd</wp:tag_slug><wp:tag_name><![CDATA[systemd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>74</wp:term_id><wp:tag_slug>sysvinit</wp:tag_slug><wp:tag_name><![CDATA[sysvinit]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>59</wp:term_id><wp:tag_slug>tags</wp:tag_slug><wp:tag_name><![CDATA[tags]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>tilde</wp:tag_slug><wp:tag_name><![CDATA[tilde]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>tmux</wp:tag_slug><wp:tag_name><![CDATA[tmux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>72</wp:term_id><wp:tag_slug>tomorrow-night</wp:tag_slug><wp:tag_name><![CDATA[tomorrow-night]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>ttf-google-webfonts</wp:tag_slug><wp:tag_name><![CDATA[ttf-google-webfonts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>48</wp:term_id><wp:tag_slug>udev</wp:tag_slug><wp:tag_name><![CDATA[udev]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>urxvt</wp:tag_slug><wp:tag_name><![CDATA[urxvt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>39</wp:term_id><wp:tag_slug>usb</wp:tag_slug><wp:tag_name><![CDATA[usb]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>58</wp:term_id><wp:tag_slug>vi</wp:tag_slug><wp:tag_name><![CDATA[vi]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>vicmd</wp:tag_slug><wp:tag_name><![CDATA[vicmd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>69</wp:term_id><wp:tag_slug>viewer</wp:tag_slug><wp:tag_name><![CDATA[viewer]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>vim</wp:tag_slug><wp:tag_name><![CDATA[vim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>virtualenv</wp:tag_slug><wp:tag_name><![CDATA[virtualenv]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>61</wp:term_id><wp:tag_slug>workflow</wp:tag_slug><wp:tag_name><![CDATA[workflow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>60</wp:term_id><wp:tag_slug>workspaces</wp:tag_slug><wp:tag_name><![CDATA[workspaces]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>zsh</wp:tag_slug><wp:tag_name><![CDATA[zsh]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.4.2</generator>

	<item>
		<title>Git status in zsh prompt - the easy way</title>
		<link>http://archlinux.me/w0ng/2012/03/27/git-status-in-zsh-prompt-the-easy-way/</link>
		<pubDate>Tue, 27 Mar 2012 21:46:31 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[Copy the completion file to your home directory:

<pre line="">$ cp /usr/share/git/completion/git-completion.bash ~/.git-completion.bash</pre>

Add the following to your <code>~/.zshrc</code>

<pre lang="bash" line="75">source ~/.git-completion.bash
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="auto"
PROMPT='%{$fg[cyan]%}%n%{$fg[blue]%}@%{$fg[magenta]%}%m %{$fg[yellow]%}%~ %{$fg[red]%}$(__git_ps1 " (%s)")
%{$fg[green]%}%#%{$reset_color%} '</pre>

You may be seeing the following error in your prompt whenever you cd into a local git repository:

<pre line="">local:2: command not found: svn_url_pattern</pre>

As discussed <a href="http://www.spinics.net/lists/git/msg177287.html" target="_blank">here</a>, this is due to syntactical differences between bash and zsh. Make the following changes in <code>~/.git-completion.bash</code> to fix this:

<pre>--- /usr/share/git/completion/git-completion.bash 2012-03-13 10:30:26.000000000 +1100
+++ ./git-completion.bash 2012-03-26 10:22:19.957256527 +1100
@@ -94,8 +94,9 @@ __gitdir ()
__git_ps1_show_upstream ()
{
local key value
- local svn_remote=() svn_url_pattern count n
+ local svn_remote svn_url_pattern count n
local upstream=git legacy="" verbose=""
+ svn_remote=()

# get some config options from git-config
local output="$(git config -z --get-regexp '^(svn-remote\..*\.url|bash\.showupstream)$' 2&gt;/dev/null | tr '\n' '\n ')"
@@ -291,7 +292,7 @@ __git_ps1 ()

if [ -n "${GIT_PS1_SHOWUNTRACKEDFILES-}" ]; then
if [ -n "$(git ls-files --others --exclude-standard)" ]; then
- u="%"
+ u="!"
fi
fi</pre>

<a href="http://ompldr.org/vZDZhcw/git-status-zsh-prompt.png"><img class="size-full wp-image-29 alignnone" src="http://dl.dropbox.com/u/23813887/git-status-zsh-prompt.png" alt="" width="478" height="160" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2012-03-27 21:46:31</wp:post_date>
		<wp:post_date_gmt>2012-03-27 21:46:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-status-in-zsh-prompt-the-easy-way</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="prompt"><![CDATA[prompt]]></category>
		<category domain="post_tag" nicename="status"><![CDATA[status]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Juan]]></wp:comment_author>
			<wp:comment_author_email>cpfiro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.130.78.238</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 06:59:36</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 19:59:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, im new to arch and the arch forum as well. I saw you had a really cool wallpaper, is there anyway you could email it to me? 

Thank you very much
Juan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335297576.6955";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335323520.6345";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Vim slow on long lines with syntax enabled</title>
		<link>http://archlinux.me/w0ng/2012/03/28/vim-slow-long-lines-syntax-enabled/</link>
		<pubDate>Wed, 28 Mar 2012 07:39:43 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[Vim is my default text editor. Besides coding, I also use vim with the <a href="https://github.com/matthias-guenther/hammer.vim" target="_blank">Hammer plugin</a> to do most my basic word processing.

One major annoyance I've found is that terminal vim responds extremely slowly when dealing with files that contain long lines (.e.g. xml, markdown, php, etc.).

Some simple changes in <code>~/.vimrc</code> to overcome this:
<pre lang="vim" line="52">" set max syntax columns to prevent lag on long lines (default: 3000)
set synmaxcol=128
" disable cursorline (default: nocursorline)
set nocursorline "</pre>

To compensate for loss of the visual aid in the cursorline, in my vim theme and <code>~/.Xresources</code>, I changed my cursor colour from the default grey/white to yellow.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2012-03-28 18:39:43</wp:post_date>
		<wp:post_date_gmt>2012-03-28 07:39:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vim-slow-long-lines-syntax-enabled</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="lines"><![CDATA[lines]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="long"><![CDATA[long]]></category>
		<category domain="post_tag" nicename="slow"><![CDATA[slow]]></category>
		<category domain="post_tag" nicename="syntax"><![CDATA[syntax]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Zsh: Change cursor colour to indicate vi-mode</title>
		<link>http://archlinux.me/w0ng/2012/04/06/zsh-change-cursor-colour-to-indicate-vi-mode/</link>
		<pubDate>Thu, 05 Apr 2012 17:30:15 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[From <a href="https://bbs.archlinux.org/viewtopic.php?id=95078" target="_blank">Arch Forums</a>.

It's possible to change the cursor in urxvt when using zsh to indicate the current vi mode (e.g. grey for INSERT, red for NORMAL).

Append the following to <code>~/.zshrc</code>

<pre lang="bash" line="33"># change cursor colour depending on vi mode
zle-keymap-select () {
  if [ "$TERM" = "rxvt-unicode-256color" ]; then
if [ $KEYMAP = vicmd ]; then
echo -ne "\033]12;red\007"
    else
echo -ne "\033]12;grey\007"
    fi
fi
}; zle -N zle-keymap-select
zle-line-init () {
  zle -K viins
  echo -ne "\033]12;grey\007"
}; zle -N zle-line-init</pre>

Zsh auto-detects and sets the editing mode (default: emacs) to vi if <code>$EDITOR=vim</code>. If this environment variable isn't set, or is set to something else, you'll also need to add <code>bindkey -v</code> to your <code>~/.zshrc</code>.

<img src="http://dl.dropbox.com/u/23813887/vicmd-insert.png" alt="" /> <img src="http://dl.dropbox.com/u/23813887/vicmd-normal.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2012-04-06 04:30:15</wp:post_date>
		<wp:post_date_gmt>2012-04-05 17:30:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zsh-change-cursor-colour-to-indicate-vi-mode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="colour"><![CDATA[colour]]></category>
		<category domain="post_tag" nicename="cursor"><![CDATA[cursor]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="urxvt"><![CDATA[urxvt]]></category>
		<category domain="post_tag" nicename="vicmd"><![CDATA[vicmd]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>321</wp:comment_id>
			<wp:comment_author><![CDATA[ben]]></wp:comment_author>
			<wp:comment_author_email>ben@benbergman.ca</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.71.163.232</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 05:35:34</wp:comment_date>
			<wp:comment_date_gmt>2012-07-23 18:35:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This works for me, but when used in tmux, it prints a weird charater to the screen and on some computers produces a beep. Any idea why this might be?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343068534.5504";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343068785.8084";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>325</wp:comment_id>
			<wp:comment_author><![CDATA[w0ng]]></wp:comment_author>
			<wp:comment_author_email>akamchoiw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.240.59.78</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 16:49:36</wp:comment_date>
			<wp:comment_date_gmt>2012-07-24 05:49:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Changing 
$TERM = "rxvt-unicode-256color"
to
$TERM != "linux"

should work for running tmux inside of xterm (I couldn't get it to work in rvxt)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>321</wp:comment_parent>
			<wp:comment_user_id>57</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343108976.8563";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Make IPython recognise virtualenv</title>
		<link>http://archlinux.me/w0ng/2012/04/09/make-ipython-recognise-virtualenv/</link>
		<pubDate>Mon, 09 Apr 2012 02:22:57 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[IPython doesn't currently recognise when you're in a virtualenv. (See <a href="https://github.com/ipython/ipython/issues/1171" target="_blank">high priority issue</a>).

There are currently 3 popular workarounds for those without root access.

Workaround #1. Add the following to <code>~/.bashrc</code> or <code>~/.zshrc</code>:

<pre lang="bash">alias ipython="python /usr/bin/ipython"</pre>

Workaround #2. Install a local virtualenv copy of ipython:

<pre>$ pip install ipython</pre>

Workaround #3. Create <code>~/.config/ipython/profile_default/ipython_virtualenv.py</code> with the following (for Python3):

<pre lang="python" line="1"># Modified for Python 3 (https://gist.github.com/1759781)
from os import environ
from os.path import join, sep

if 'VIRTUAL_ENV' in environ:
    virtual_env_dir = environ['VIRTUAL_ENV']
    activate_this = join(virtual_env_dir, "bin", "activate_this.py")
    exec(compile(open(activate_this).read(), activate_this, 'exec'),
         dict(__file__=activate_this))
    virtual_env_name = virtual_env_dir.split(sep)[-1]
    message = 'virtualenv "{0}" ({1})]'.format(virtual_env_name,
                                               virtual_env_dir)
    print(message)
    del virtual_env_dir
del environ, join, sep</pre>
Add the following to <code>~/.config/ipython/profile_default/ipython_config.py</code>:
<pre lang="python">c.InteractiveShellApp.exec_files = ['ipython_virtualenv.py']</pre>
From the <a href="http://ipython.org/faq.html#how-do-i-make-ipython-recognise-my-virtualenvs">IPython FAQ</a>, those with root access can access it by modifying the shebang in <code>/usr/bin/ipython</code>
<pre lang="bash" line="1">#!/usr/bin/env python</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2012-04-09 13:22:57</wp:post_date>
		<wp:post_date_gmt>2012-04-09 02:22:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-ipython-recognise-virtualenv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ipython"><![CDATA[ipython]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="python2"><![CDATA[python2]]></category>
		<category domain="post_tag" nicename="virtualenv"><![CDATA[virtualenv]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up eggdrop</title>
		<link>http://archlinux.me/w0ng/2012/04/18/setting-up-eggdrop/</link>
		<pubDate>Wed, 18 Apr 2012 02:03:22 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[Eggdrop is an open source IRC bot. Since no ArchWiki article exists for eggdrop, here's a quick getting started guide.

Download the aur eggdrop package:
<pre line="">$ yaourt -S eggdrop</pre>
Copy the configuration file to a local directory:
<pre line=""># mkdir ~/.eggdrop
# cp /etc/eggdrop.conf ~/.eggdrop</pre>
Modify <code>~/.eggdrop/eggdrop.conf</code> using the eggdrop wiki as a guide:
<a href="http://eggwiki.org/Eggdrop.conf" target="_blank">http://eggwiki.org/Eggdrop.conf</a>

Start eggdrop:
<pre line="">cd ~/.eggdrop
eggdrop eggdrop.conf</pre>
Message your bot from your IRC client to setup an admin password:
<pre line="">/msg YourBotsName hello</pre>
Control your bot by via DCC:
<pre line="">/ctcp YourBotsName chat
/dcc chat YourBotsName</pre>
To start eggdrop when you startx, add to <code>~/.xinitrc</code>:
<pre>cd ~/.eggdrop &amp;&amp; eggdrop eggdrop.conf &amp;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2012-04-18 13:03:22</wp:post_date>
		<wp:post_date_gmt>2012-04-18 02:03:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-eggdrop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bot"><![CDATA[bot]]></category>
		<category domain="post_tag" nicename="eggdrop"><![CDATA[eggdrop]]></category>
		<category domain="post_tag" nicename="irc"><![CDATA[irc]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="setup"><![CDATA[setup]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fixing Cousine from ttf-google-webfonts</title>
		<link>http://archlinux.me/w0ng/2012/04/18/fixing-cousine-from-ttf-google-webfonts/</link>
		<pubDate>Wed, 18 Apr 2012 00:55:59 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[This refers to the latest ttf-google-webfonts aur package (version: 2369-1, revision: f50f26f0c77c).

Problem #1: tilde character looks like a dash when font size is less than 10
Problem #2: semicolon glyph is missing

I've entered a bug report <a href="http://code.google.com/p/googlefontdirectory/issues/detail?id=132" target="_blank">here</a>

Fix:
<ol>
<li>Download latest files from the source: 
<a href="https://googlefontdirectory.googlecode.com/hg/cousine/src/" target="_blank">https://googlefontdirectory.googlecode.com/hg/cousine/src/</a></li>

<li>Install fontforge
<pre line=""># pacman -S fontforge</pre></li>

<li>Open <code>Cousine-Regular.ttf</code> in <code>fontforge</code></li>

<li>Element -&gt; Font Info -&gt; PS Names</li>

<li>Change font name to distinguish it from the ttf-google-webfonts package
<pre line="">Fontname: CousineRegen
Family Name: Cousine Regen
Name of Humans: Cousine Regen</pre></li>

<li>OK -&gt; Change</li>
<li>File -&gt; Generate Fonts -&gt; Truetype -&gt; untick Validate before saving -&gt; Save</li>

<li>Repeat 3-7 for the bold, italic and boldItalic ttf files</li>

<li>Add <code>CousineRegen*.ttf</code> to a directory in your FontPath</li>
<li>Refresh font cache
<pre line=""># fc-cache -fv</pre></li>
</ol>

tl;dr: Source ttf fonts provide missing glyph. Regenerating fonts in fontforge fixes tilde character at low fontsizes.

Before vs after:
<img src="http://dl.dropbox.com/u/23813887/cousine1.png" alt="" />
<img src="http://dl.dropbox.com/u/23813887/cousine2.png" alt="" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2012-04-18 11:55:59</wp:post_date>
		<wp:post_date_gmt>2012-04-18 00:55:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fixing-cousine-from-ttf-google-webfonts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cousine"><![CDATA[cousine]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="semicolon"><![CDATA[semicolon]]></category>
		<category domain="post_tag" nicename="tilde"><![CDATA[tilde]]></category>
		<category domain="post_tag" nicename="ttf-google-webfonts"><![CDATA[ttf-google-webfonts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>699</wp:comment_id>
			<wp:comment_author><![CDATA[Pravin Satpute]]></wp:comment_author>
			<wp:comment_author_email>pravin.d.s@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.242.114.13</wp:comment_author_IP>
			<wp:comment_date>2012-09-29 16:43:33</wp:comment_date>
			<wp:comment_date_gmt>2012-09-29 05:43:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[After doing this, can you check regenerated font in  putty.exe whether it still detect as Mono-space fonts.

I am facing problem that regenerated font is not getting recognized as a Monospace font in Windows]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1348897413.5907";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349328922.2551";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>719</wp:comment_id>
			<wp:comment_author><![CDATA[w0ng]]></wp:comment_author>
			<wp:comment_author_email>akamchoiw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.240.59.78</wp:comment_author_IP>
			<wp:comment_date>2012-10-04 19:07:19</wp:comment_date>
			<wp:comment_date_gmt>2012-10-04 08:07:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, I haven't tried using the font in Windows]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>699</wp:comment_parent>
			<wp:comment_user_id>57</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349338039.3628";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Better dircolors with Solarized</title>
		<link>http://archlinux.me/w0ng/2012/04/21/better-dircolors-with-solarized/</link>
		<pubDate>Sat, 21 Apr 2012 10:00:18 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[When using the <a href="https://github.com/altercation/solarized/blob/master/xresources-colors-solarized/Xresources" target="_blank">recommended Solarized colours</a> in <code>~/.Xresources</code>, dircolors output isn't very distinguishable. 

Here's what it looks like:
<img src="http://dl.dropbox.com/u/23813887/dircolors1.png" alt="" />

Here's what we want:
<img src="http://dl.dropbox.com/u/23813887/dircolors2.png" alt="" />

Copy the default dircolors to <code>$HOME</code>
<pre>$ dircolors -p &gt; ~/.dir_colours</pre>

Make the following changes to <code>~/.dir_colours</code>
<pre lang="diff" line="1">--- .dir_colours.orig	2012-04-21 19:48:39.029808008 +1000
+++ .dir_colours	2012-04-21 18:28:38.645813921 +1000
@@ -68,8 +68,8 @@ TERM xterm-debian
 #NORMAL 00 # no color code at all
 #FILE 00 # regular file: use no color at all
 RESET 0 # reset to "normal" color
-DIR 01;34 # directory
-LINK 01;36 # symbolic link. (If you set this to 'target' instead of a
+DIR 00;34 # directory
+LINK 00;36 # symbolic link. (If you set this to 'target' instead of a
  # numerical value, the color is as for the file pointed to.)
 MULTIHARDLINK 00 # regular file with more than one link
 FIFO 40;33 # pipe
@@ -85,7 +85,7 @@ STICKY_OTHER_WRITABLE 30;42 # dir that i
 OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
 STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable
 # This is for files with execute permission:
-EXEC 01;32
+EXEC 00;32
 # List any file extensions like '.gz' or '.tar' that you would like ls
 # to colorize below. Put the extension, a space, and the color init string.
 # (and any comments you want to add after a '#')
@@ -184,19 +184,19 @@ EXEC 01;32
 .ogv 01;35
 .ogx 01;35
 # audio formats
-.aac 00;36
-.au 00;36
-.flac 00;36
-.mid 00;36
-.midi 00;36
-.mka 00;36
-.mp3 00;36
-.mpc 00;36
-.ogg 00;36
-.ra 00;36
-.wav 00;36
+.aac 00;33
+.au 00;33
+.flac 00;33
+.mid 00;33
+.midi 00;33
+.mka 00;33
+.mp3 00;33
+.mpc 00;33
+.ogg 00;33
+.ra 00;33
+.wav 00;33
 # http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions
-.axa 00;36
-.oga 00;36
-.spx 00;36
-.xspf 00;36
+.axa 00;33
+.oga 00;33
+.spx 00;33
+.xspf 00;33
</pre>

Finally, run the following line to append to the colours to <code>~/.bashrc</code> or <code>~/.zshrc</code>:
<pre>$ echo "eval $(dircolors ~/.dir_colours)" &gt;&gt; ~/.zshrc</code></pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2012-04-21 21:00:18</wp:post_date>
		<wp:post_date_gmt>2012-04-21 10:00:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>better-dircolors-with-solarized</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dircolors"><![CDATA[dircolors]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="solarized"><![CDATA[solarized]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DWM: A pretty statusbar</title>
		<link>http://archlinux.me/w0ng/2012/05/01/dwm-a-pretty-statusbar/</link>
		<pubDate>Tue, 01 May 2012 11:27:55 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[dwm uses <code>xsetroot</code> to pipe text into its statusbar.
By default, the statusbar does not support colours and does not support xbm icons.
You could get this functionality by using third party apps such as <a href="http://sites.google.com/site/gotmor/dzen" target="_blank">dzen</a> with <a href="http://conky.sourceforge.net/" target="_blank">conky</a>.

To get this functionality natively within <strong>dwm 6.0</strong>:
<ul>
<li>Patch your dwm config with jasonwryan's <a href="http://beta.intuxication.org/hg/jasonwryan/archer/file/322deebe90ff/Build/dwm/statuscolors-6.0.diff" target="_blank">statuscolors-6.0</a></li>
<li>Take a look at jasonwryan's <a href="https://bitbucket.org/jasonwryan/eeepc/src/241da582a0fd/Scripts/dwm-status" target="_blank">dwm-status</a> script the <a href="http://dzen.geekmode.org/dwiki/doku.php?id=dzen:dzen-and-xmonad" target="_blank">dzen</a> website for some ideas of what text can be piped</li>
<li>Follow <a href="https://bbs.archlinux.org/viewtopic.php?pid=724236#p724236" target="_blank">Lokaltag's tutorial</a> to draw symbols into your favourite bitmap font.</li>
<li>Look at dzen's <a href="http://dzen.geekmode.org/dwiki/doku.php?id=dzen:icon-packs" target="_blank">icon packs</a> for some ideas of what can be drawn.</li>
</ul>

Here's what my statusbar currently looks like (click for full length image):
<a href="http://dl.dropbox.com/u/23813887/statusbar.png" target="_blank"><img src="http://dl.dropbox.com/u/23813887/statusbar-thumb.png" alt="" /></a>

For the lazy, here's how to get the statusbar to look like the above:
<ol>
<li>Save font as <code>~/.fonts/terminus2.bdf</code>:
<a href="https://github.com/w0ng/dwm/blob/master/terminus2.bdf" target="_blank">https://github.com/w0ng/dwm/blob/master/terminus2.bdf</a></li>

<li>Update font cache:</li>
<pre line="">$ xset +fp ~/.fonts
# fc-cache -fv</pre></li>

<li>Save script as <code>~/.dwm-statusbar.bash</code>:
<a href="https://github.com/w0ng/bin/blob/master/dwm-statusbar" target="_blank">https://github.com/w0ng/bin/blob/master/dwm-statusbar</a></li>

<li>Allow script to be executed:
<pre line="">$ chmod +x ~/.dwm-statusbar.bash</pre></li>

<li>Apply jasonwryan's <a href="http://beta.intuxication.org/hg/jasonwryan/archer/file/322deebe90ff/Build/dwm/statuscolors-6.0.diff" target="_blank">statuscolors-6.0 patch</a></li>

<li>Change font and statuscolors options in <code>dwm/config.h</code>:
<pre line="2" lang="c">
...
/* appearance */
static const char font[]            = "-*-terminus2-medium-r-*-*-12-*-*-*-*-*-*-*";
#define NUMCOLORS 6
static const char colors[NUMCOLORS][ColLast][8] = {
  // border foreground background
  { "#073642", "#657b83", "#002b36" }, // 1 = normal (grey on black)
  { "#b58900", "#eee8d5", "#002b36" }, // 2 = selected (white on black)
  { "#dc322f", "#002b36", "#b58900" }, // 3 = urgent (black on yellow)
  { "#073642", "#839496", "#073642" }, // 4 = lightgrey on brightblack
  { "#073642", "#073642", "#002b36" }, // 5 = brightblack on black
  { "#073642", "#002b36", "#073642" }, // 6 = black on brightblack
};
...</pre>
<li>Add statusbar script to <code>~/.xinitrc</code>:
<pre>~/.dwm-statusbar.bash &amp;</pre>
</li>
<li>Restart X</li>
</ol>

<strong>Edit: This appears to be a better solution (I haven't tried it yet, though): <a href="https://bbs.archlinux.org/viewtopic.php?pid=1096029#p1096029" target="_blank">https://bbs.archlinux.org/viewtopic.php?pid=1096029#p1096029</a></strong>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2012-05-01 22:27:55</wp:post_date>
		<wp:post_date_gmt>2012-05-01 11:27:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dwm-a-pretty-statusbar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dwm"><![CDATA[dwm]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="pretty"><![CDATA[pretty]]></category>
		<category domain="post_tag" nicename="statusbar"><![CDATA[statusbar]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>323</wp:comment_id>
			<wp:comment_author><![CDATA[eldamar]]></wp:comment_author>
			<wp:comment_author_email>samuel@eldamar.se</wp:comment_author_email>
			<wp:comment_author_url>http://eldamar.se</wp:comment_author_url>
			<wp:comment_author_IP>85.226.119.128</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 11:39:58</wp:comment_date>
			<wp:comment_date_gmt>2012-07-24 00:39:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I must be doing something wrong because i only get a empty statusbar after trying to use this icon solution, something about the output breaks my bar and everything after an icon or the icon character is not showing up for some reason, even if ii change to a font previosly working i still get nothing. i even tried to build from your PKGBUILD with every patch and the exact same config.h file, still didn't work for me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1343090398.804";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343104682.2572";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>324</wp:comment_id>
			<wp:comment_author><![CDATA[w0ng]]></wp:comment_author>
			<wp:comment_author_email>akamchoiw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.240.59.78</wp:comment_author_IP>
			<wp:comment_date>2012-07-24 15:38:02</wp:comment_date>
			<wp:comment_date_gmt>2012-07-24 04:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm guessing it's because the statusbar script contains some files/variables that are only installed on my comp.

You shouldn't need any patches for this to work. All you need is to have terminus2 in ~/.fonts.

To test whether the icon glyphs work, test if the statusbar displays fine after changing terminus to terminus2 in config.h.

Next try to display some of the normal chars: e.g.
$ xsetroot -name "abc"

Then try to display some of the icon letters: e.g.
$ xsetroot -name "ÜÜÝ"

Then test each part of dwm-statusbar.bash (e.g. try getting print_datetime() to work and delete everything else).

Note that a much easier alternative could be using conky to display system stats]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>323</wp:comment_parent>
			<wp:comment_user_id>57</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343104682.2077";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>403</wp:comment_id>
			<wp:comment_author><![CDATA[domac]]></wp:comment_author>
			<wp:comment_author_email>thecl1@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.250.194.169</wp:comment_author_IP>
			<wp:comment_date>2012-08-05 21:26:51</wp:comment_date>
			<wp:comment_date_gmt>2012-08-05 10:26:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,
I just applied that patch and everything works well for me. Now I wanted to modify that statusbar to my needs. Can you tell me where to find the commands for the icons (at best to copy&amp;paste) and how to add colors to them?
Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344162412.0129";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1344162700.306";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[w0ng]]></wp:comment_author>
			<wp:comment_author_email>akamchoiw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.240.59.78</wp:comment_author_IP>
			<wp:comment_date>2012-08-09 18:31:19</wp:comment_date>
			<wp:comment_date_gmt>2012-08-09 07:31:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To get colours piped to the statusbar, you need to use the statuscolours patch. To output the colours, you bash escape sequences, e.g. if I wanted to output something in black in black on yellow (3rd colour definition in the posted config.h), you would pipe it with echo -e "\x03foobar"

To find the unicode or escape chars for the icon glyphs, use something like xorg-xfd or gbdfed or fontforge]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>403</wp:comment_parent>
			<wp:comment_user_id>57</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1344497479.2204";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>ALSA: Switch audio output to USB Headset</title>
		<link>http://archlinux.me/w0ng/2012/07/06/alsa-switch-audio-usb-headset/</link>
		<pubDate>Thu, 05 Jul 2012 13:11:36 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[I recently purchased a USB headset. 
Here's how to get it working with ALSA, manually and automatically.

<strong>Manually:</strong>

(From <a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture" target="_blank">ALSA ArchWiki</a>)

Load module:
<pre line=""># modprobe snd_usb_audio</pre>

Verify that module is loaded:
<pre line="">$ lsmod | grep snd_usb_audio
snd_usb_audio          93519  3 
...</pre>

Find corresponding card ID:
<pre line="">$ aplay -l
**** List of PLAYBACK Hardware Devices ****
...
card 2: P780 [Plantronics GameCom 780], device 0: USB Audio [USB Audio]
  Subdevices: 0/1
  Subdevice #0: subdevice #0</pre>

Set card ID as default audio device in <code>~/.asoundrc</code>:
<pre line="1" lang="ini">defaults.ctl.card 2
defaults.pcm.card 2</pre>

The manual method works fine if the headset is always plugged in.

<strong>Automatically:</strong>

It would be better if we could automatically change the default audio device based on whether the USB headset is plugged in or not. This can be achieved by using <a href="https://bbs.archlinux.org/viewtopic.php?pid=763244#p763244" target="_blank">udev rules</a>.

Add the following to <code>/etc/udev/rules.d/00-local.rules</code>:
<pre># Set USB headset as default sound card when plugged in
KERNEL=="pcmC[D0-9cp]*", ACTION=="add", PROGRAM="/bin/sh -c 'K=%k; K=$${K#pcmC}; K=$${K%%D*}; echo defaults.ctl.card $$K &gt; /etc/asound.conf; echo defaults.pcm.card $$K &gt;&gt;/etc/asound.conf'"

# Restore default sound card when USB headset unplugged
KERNEL=="pcmC[D0-9cp]*", ACTION=="remove", PROGRAM="/bin/sh -c 'echo defaults.ctl.card 0 &gt; /etc/asound.conf; echo defaults.pcm.card 0 &gt;&gt;/etc/asound.conf'"</pre>

udev automatically detects changes to rules. However, you will need to unplug and replug the headset for changes to be be triggered.

Audio applications need to be restarted whenever default card changes. If anyone knows a way of switching audio devices without restarting applications (using ALSA, not Pulseaudio), please let me know.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2012-07-06 00:11:36</wp:post_date>
		<wp:post_date_gmt>2012-07-05 13:11:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>alsa-switch-audio-usb-headset</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="alsa"><![CDATA[alsa]]></category>
		<category domain="post_tag" nicename="audio"><![CDATA[audio]]></category>
		<category domain="post_tag" nicename="automatic"><![CDATA[automatic]]></category>
		<category domain="post_tag" nicename="default"><![CDATA[default]]></category>
		<category domain="post_tag" nicename="headset"><![CDATA[headset]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="sound"><![CDATA[sound]]></category>
		<category domain="post_tag" nicename="switch"><![CDATA[switch]]></category>
		<category domain="post_tag" nicename="usb"><![CDATA[usb]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>486</wp:comment_id>
			<wp:comment_author><![CDATA[Cian]]></wp:comment_author>
			<wp:comment_author_email>cian@cianmcgovern.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.cianmcgovern.com</wp:comment_author_url>
			<wp:comment_author_IP>194.46.174.211</wp:comment_author_IP>
			<wp:comment_date>2012-08-23 22:10:44</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 11:10:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been thinking of getting one of these Plantronics GameCom 780 headsets and I'm wondering if you had any issues with them on Arch Linux? Does everything work as expected?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1345720244.436";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1345827923.905";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Udev: Changing SSD&#039;s default (CFQ) I/O Scheduler</title>
		<link>http://archlinux.me/w0ng/2012/07/09/udev-changing-ss-default-cfq-io-scheduler/</link>
		<pubDate>Mon, 09 Jul 2012 06:16:17 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[Courtesy of falconindy @ #archlinux

<pre line="1" lang="bash"># set a larger readahead size
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/read_ahead_kb}="1024"
 
# set deadline scheduler for non-rotating disks
ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="deadline"</pre>

To verify:
<pre line="">$ cat /sys/block/sda/queue/scheduler
noop [deadline] cfq</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2012-07-09 17:16:17</wp:post_date>
		<wp:post_date_gmt>2012-07-09 06:16:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>udev-changing-ss-default-cfq-io-scheduler</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cfq"><![CDATA[cfq]]></category>
		<category domain="post_tag" nicename="deadline"><![CDATA[deadline]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="noop"><![CDATA[noop]]></category>
		<category domain="post_tag" nicename="scheduler"><![CDATA[scheduler]]></category>
		<category domain="post_tag" nicename="ssd"><![CDATA[ssd]]></category>
		<category domain="post_tag" nicename="udev"><![CDATA[udev]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[udev-changing-a-drives-default-cfq-io-scheduler]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[WonderWoofy]]></wp:comment_author>
			<wp:comment_author_email>curtisshima@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.21.78.128</wp:comment_author_IP>
			<wp:comment_date>2012-08-21 17:01:50</wp:comment_date>
			<wp:comment_date_gmt>2012-08-21 06:01:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@w0ng - thanks a bunch to both you can falconindy for providing this.  I was using the rc.local method before which seemed like something of a hack.  But when I switched to systemd, it seemed wrong to have a service file that ran an echo command.  This seems like the *right* way to do it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345528910.1301";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345533824.2193";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>493</wp:comment_id>
			<wp:comment_author><![CDATA[ColdFeetBob]]></wp:comment_author>
			<wp:comment_author_email>a_nightfall@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.252.84.42</wp:comment_author_IP>
			<wp:comment_date>2012-08-24 05:24:12</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 18:24:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this post - I found it already in the Arch's Wiki.
Is the "larger readahaed size" required for the deadline/noop scheduler or it is another kind of SSD optimization?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345746252.2434";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345827923.8816";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>494</wp:comment_id>
			<wp:comment_author><![CDATA[ColdFeetBob]]></wp:comment_author>
			<wp:comment_author_email>a_nightfall@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.252.84.42</wp:comment_author_IP>
			<wp:comment_date>2012-08-24 05:26:43</wp:comment_date>
			<wp:comment_date_gmt>2012-08-23 18:26:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Also, does the rule affect even pendrive, sd cards, etc (as "non rotating disks")?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345746403.0474";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1345827923.8479";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SSD + GPT + grub2 + systemd</title>
		<link>http://archlinux.me/w0ng/2012/07/12/ssd-gpt-grub2-systemd/</link>
		<pubDate>Wed, 11 Jul 2012 15:36:05 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[Summary of my new Arch setup optimised for SSD. See <a href="https://wiki.archlinux.org/index.php/Solid_State_Drives" target="_blank">ArchWiki</a> for more tweaks.

<strong>Background</strong>

<ul>
	<li>Specs: GA-EP45-DS3L, C2D E8400, 4GB DDR2, 512MB HD4850, 1x 640GB WD Black, 2x 1TB WD Green</li>
	<li>Purchased: <a href="http://www.intel.com/content/www/us/en/solid-state-drives/solid-state-drives-330-series.html" target="_blank">120GB Intel 330 SSD</a></li>
</ul>



<strong>BIOS/UEFI settings</strong>

<ul>
	<li>Firmware: EFI/UEFI instead of BIOS</li>
	<li>SATA Mode: AHCI instead of IDE</li>
</ul>

<strong>Pre Installation</strong>

<ul>
	<li>Partition: <a href="https://wiki.archlinux.org/index.php/Solid_State_Drives#Gdisk_Usage_Summary" target="_blank">GPT</a> instead of MBR</li>
</ul>

<strong>Arch Installation</strong>

<ul>
	<li>Filesystem: ext2 for /boot; ext4 for the rest</li>
	<li>fstab options: noatime, discard</li>
	<li>Bootloader: <a href="https://wiki.archlinux.org/index.php/GRUB2" target="_blank">GRUB2</a> instead of GRUB1/GRUB Legacy</li>
</ul>


<strong>Post Installation</strong>

<ul>
	<li>Init: <a href="https://wiki.archlinux.org/index.php/Systemd" target="_blank">systemd</a> instead of sysvinit</li>
	<li>I/O scheduler: <a href="http://archlinux.me/w0ng/2012/07/09/udev-changing-ss-default-cfq-io-scheduler" target="_blank">noop</a> instead of cfq</li>
</ul>

<strong>Misc Output</strong>

systemd-analyze, gdisk, df, fstab, ls: https://gist.github.com/3107896]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2012-07-12 02:36:05</wp:post_date>
		<wp:post_date_gmt>2012-07-11 15:36:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ssd-gpt-grub2-systemd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gpt"><![CDATA[gpt]]></category>
		<category domain="post_tag" nicename="grub2"><![CDATA[grub2]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="ssd"><![CDATA[ssd]]></category>
		<category domain="post_tag" nicename="systemd"><![CDATA[systemd]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vim mode in Irssi</title>
		<link>http://archlinux.me/w0ng/2012/07/14/vim-mode-in-irssi/</link>
		<pubDate>Fri, 13 Jul 2012 22:07:18 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[I came across an Irssi script that provides vim-like keybindings for the input line.

The script allows you to toggle between <code>INSERT</code>, <code>COMMAND</code> and <code>EX</code> modes.

In my <a href="https://github.com/w0ng/vim/blob/master/vimrc" target="_blank">vimrc</a> and <a href="https://github.com/w0ng/dotfiles/blob/master/zshrc" target="_blank">zshrc</a>, I've already got <code>jj</code> mapped to <code>Esc</code> when in <code>INSERT</code> mode. The Irssi script provides this mapping by setting:
<pre>/set vim_mode_cmd_seq j</pre>

Another useful feature is the mode indicator, best used in conjunction with <a href="https://github.com/shabble/irssi-scripts/tree/master/prompt_info" target="_blank">uberprompt</a>.

<img src="http://ompldr.org/vZXFpMw" alt="" />

<img src="http://ompldr.org/vZXFpMg" alt="" />

From the <a href="https://github.com/shabble/irssi-scripts/blob/master/vim-mode/README.pod" target="_blank">README</a>, the following common keybindings are supported:
<ul>	
	<li>Command mode: <code>Esc &lt;Ctrl-C&gt;</code></li>
	<li>Cursor motion: <code>h l 0 ^ $ &lt;Space&gt; &lt;BS&gt; f t F T</code></li>
    	<li>History motion: <code>j k gg G gg</code></li>
    	<li>Cursor word motion: <code>w b ge e W gE B E</code></li>
    	<li>Word objects: <code>aw aW</code></li>
    	<li>Yank and paste: <code>C&lt;y p P&gt;</code></li>
    	<li>Change and delete: <code>c d</code></li>
    	<li>Delete at cursor: <code>x X</code></li>
    	<li>Replace at cursor: <code>r</code></li>
    	<li>Insert mode: <code>i a I A</code></li>
    	<li>Switch case: <code>~</code></li>
    	<li>Repeat change: <code>.</code></li>
    	<li>Repeat: <code>ftFT: ; ,</code></li>
    	<li>Registers: <code>"a-"z "" "0 "* "+ "_</code></li>
    	<li>Line-wise shortcuts: <code>dd cc yy</code></li>
    	<li>Shortcuts: <code>s S C D</code></li>
    	<li>Scroll the scrollback buffer: <code>Ctrl-E Ctrl-D Ctrl-Y Ctrl-U Ctrl-F Ctrl-B</code></li>
    	<li>Switch to last active window: <code>Ctrl-6/Ctrl-^</code></li>
    	<li>Switch split windows: <code>&lt;Ctrl-W j Ctrl-W k&gt;</code></li>
    	<li>Undo/Redo: <code>u Ctrl-R</code></li>
</ul>

Get the script at: <a href="https://github.com/shabble/irssi-scripts/tree/master/vim-mode" target="_blank">https://github.com/shabble/irssi-scripts/tree/master/vim-mode</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2012-07-14 09:07:18</wp:post_date>
		<wp:post_date_gmt>2012-07-13 22:07:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vim-mode-in-irssi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="irssi"><![CDATA[irssi]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="mode"><![CDATA[mode]]></category>
		<category domain="post_tag" nicename="script"><![CDATA[script]]></category>
		<category domain="post_tag" nicename="vi"><![CDATA[vi]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>717</wp:comment_id>
			<wp:comment_author><![CDATA[Kim]]></wp:comment_author>
			<wp:comment_author_email>mail@kimlindberg.com</wp:comment_author_email>
			<wp:comment_author_url>http://kimlindberg.com</wp:comment_author_url>
			<wp:comment_author_IP>85.229.125.157</wp:comment_author_IP>
			<wp:comment_date>2012-10-04 05:24:14</wp:comment_date>
			<wp:comment_date_gmt>2012-10-03 18:24:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do you get your irssi looking like that?  Irssi theme/terminal colors/terminal font/other? It's nice :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349288654.8064";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349328923.5819";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>720</wp:comment_id>
			<wp:comment_author><![CDATA[w0ng]]></wp:comment_author>
			<wp:comment_author_email>akamchoiw@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>60.240.59.78</wp:comment_author_IP>
			<wp:comment_date>2012-10-04 19:19:30</wp:comment_date>
			<wp:comment_date_gmt>2012-10-04 08:19:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Terminal: urxvt
Terminal font: Terminus
Terminal colours: https://github.com/w0ng/dotfiles/blob/master/.config/termcolours/hybrid (copy & paste into ~/.Xresources)
Irssi theme: http://pbrisbin.com/posts/irssi (latest version @ https://github.com/pbrisbin/irssi-config)
Irssi scripts: https://github.com/w0ng/dotfiles/tree/master/.irssi/scripts]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>717</wp:comment_parent>
			<wp:comment_user_id>57</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349338770.4594";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>721</wp:comment_id>
			<wp:comment_author><![CDATA[Kim]]></wp:comment_author>
			<wp:comment_author_email>mail@kimlindberg.com</wp:comment_author_email>
			<wp:comment_author_url>http://kimlindberg.com</wp:comment_author_url>
			<wp:comment_author_IP>85.229.125.157</wp:comment_author_IP>
			<wp:comment_date>2012-10-05 02:47:38</wp:comment_date>
			<wp:comment_date_gmt>2012-10-04 15:47:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sweet.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1349365658.6028";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My dwm setup</title>
		<link>http://archlinux.me/w0ng/?p=404</link>
		<pubDate>Sun, 05 Aug 2012 03:14:01 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=404</guid>
		<description></description>
		<content:encoded><![CDATA[<b>Windows, tags and workspaces</b>

Whilst keypresses as an alternative to mouseclicks for window management should be intuitive to terminal junkies, one key concept of dwm wasn't initially apparent to me: <b>tags are not workspaces</b>. 

Tl;dr of <a href="http://lubutu.com/rant/dwm-faq" target="_blank">dwm FAQ</a>:

A <em>window</em> is just an application window in the traditional sense.
A <em>tag</em> is just a <em>label</em> for which each window may be assigned to. A window may be assigned to one or more tags. Tags provide no other functionality.
A <em>workspace</em> is just a <em>view</em> of one or more tags that are pulled into it. A workspace can be in one of three (default) layouts: tiled, monocle, floating.

As a comparison, think of traditional floating/stacking window managers, like the one used in Windows 7. In Windows 7, you have a single workspace with a bunch of taskbar icons showing the windows currently open. When you open an application such as Firefox, the Firefox icon shows up in the taskbar. Any subsequent Firefox windows that you open will be grouped with the first Firefox taskbar icon.

In dwm, a tag is somewhat analogous to the taskbar icon. For example, here's a workspace containing two tags. The first tag contains Firefox and the second tag shows Irssi.

<b>Changing default bindings</b>

<code>MODKEY</code> by default is mapped to <code>Alt</code>. I like to map my <code>Win</code> key to it instead, since I use several <code>Alt + *</code> hotkeys in my default terminal, urxvt.

<code>MODKEY + [1-9]</code> switches the workspace to the tag number and <code>MODKEY + Ctrl + [1-9]</code> toggles that tag to be shown/hidden from the current workspace. 
Similarly, <code>MOUSE1</code> click on the tagbar switches the workspace to that tag and <code>MOUSE3</code> toggles that tag. 
It makes more sense to switch these around since toggling tags should be used more often than switching workspaces.

<b>Tags Setup</b>

I use each tag for a specific purpose and committed them to finger muscle memory. There are two <em>main</em> tags that are usually empty or have temporary windows in them. This is so that I can have two workspaces and easily <code>Alt + Tab</code> between them or move windows into them when I have too many windows in another tag.

I've also set up rules for the common apps I use:
<ul>	
	<li>1: main1 (n/a)</li>
	<li>2: web (firefox)</li>
	<li>3: communication (irssi, mutt)</li>
	<li>q: terminal (urxvt, gvim)</li>
	<li>w: media (mplayer2)</li>
	<li>e: documents (libreoffice, zathura)</li>
	<li>a: graphics (gimp, inkscape, fontforge)</li>
	<li>s: file manager (ranger)</li>
	<li>d: main2 (n/a)</li>
</ul>

<b>Patches used</b>

<ul>
<li>bottom stack: additional layout</li>
<li>centred floating: windows that start up in floating mode can be centred on the screen</li>
<li>gapless grid: additional layout</li>
<li>monocle count: shows [current/total] instead of [total] in monocle mode</li>
<li>no border: removes border in monocle mode or whenever there's only one window in the workspace</li>
<li>push: allows windows to be moved up and down the list in a workspace</li>
<li>scratchpad: Floating terminal which is shown/hidden with the same keybinding</li>
<li>status colours: enables coloured text in the status bar</li>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>404</wp:post_id>
		<wp:post_date>2012-08-05 14:14:01</wp:post_date>
		<wp:post_date_gmt>2012-08-05 03:14:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-dwm-setup</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dwm"><![CDATA[dwm]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="setup"><![CDATA[setup]]></category>
		<category domain="post_tag" nicename="tags"><![CDATA[tags]]></category>
		<category domain="post_tag" nicename="workflow"><![CDATA[workflow]]></category>
		<category domain="post_tag" nicename="workspaces"><![CDATA[workspaces]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Edit githubs css using Pentadactyl and vim</title>
		<link>http://archlinux.me/w0ng/?p=500</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=500</guid>
		<description></description>
		<content:encoded><![CDATA[It's bugged me for a while that GitHub's css uses 'Clean' as one of the preferred sans-serif font, but I've been too lazy to do anything about it. In Arch, the Clean font is the tiny bitmap monospace font under the xorg-fonts-misc package that was installed as a dependency for xorg-server.

I use Pentadactyl inside Firefox. I prefer to allow other websites to use their own fonts. I don't have any Microsoft or Mac fonts installed. I use ttf-google-webfonts and Infinality's font configuration. I've modified it a bit so that my default GTK fonts are: sans-serif: Ubuntu, serif: Bitter, monospace: Cousine.

I tried out a few older <a href="http://userstyles.org/styles/browse/github" target="_blank">userstyles</a> but they only replaced some of GitHub's references to Clean. So I eventually took a bit of time to replace all the css references using vim. So the following is a mini-vim tutorial.

<strong>The 'how to'</strong>

Open up <a href="https://github.com" target="_blank">https://github.com</a> in Pentadactyl. 

View the Page Source in gvim.
<pre>gF</pre>

Search for '.css'.
<pre>/\.css</pre>

Copy the link to PRIMARY.
<pre>vi"</pre>

Download it.
<pre>&lt;ESC&gt;
:!wget &lt;SHIFT+INS&gt; -O ~/downloads/github1.css</pre>

Do the same for the next css file.
<pre>n
vi"
&lt;ESC&gt;
:!wget &lt;SHIFT+INS&gt; -O ~/downloads/github2.css</pre>

Close the page source file.
<pre>:bd</pre>

Open the first css file
<pre>:e ~/downloads/github1.css</pre>

Notice it's a single line file with 234 393 characters.
<pre lang="css">html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre...</pre>

Break up the css file by giving a new line after every instance of a brace ({}), comma (,) and semi-colon (;).
<pre>:s/[{},;]/&\r/g</pre>

You should be at the bottom of the file and it should look like this.
<pre lang="css">...
bottom:0;
border-radius:2px;
}
ul.user-graph>li .graph-bar{
display:block;
position:absolute;
bottom:23px;
width:100%;
background:#ddd;
border-radius:2px;
}</pre>

Indent the file.
<pre>gg=G</pre>

You should now be at the top of the file. The entire file should be nicely indented like this (go to the bottom with <code>&lt;SHIFT+g&gt;</code> and back to the top with <code>gg</code> afterwards).
<pre lang="css">...
  bottom:0;
  border-radius:2px;
}
ul.user-graph>li .graph-bar{
  display:block;
  position:absolute;
  bottom:23px;
  width:100%;
  background:#ddd;
  border-radius:2px;
}
</pre>

Separate each pair of braces into paragraphs by adding a blank line.
<pre>:%s/}/&\r/</pre>

You should be at the bottom of the file and it should now look like this.
<pre lang="css">...
  height:100px;
}

ul.
user-graph>li .
avatar{
  position:absolute;
  bottom:0;
  border-radius:2px;
}

ul.
user-graph>li .
...</pre>

Open pentdactylrc in a vertically split window.
<pre>:vs ~/.pentadactylrc</pre>

Append (i.e. type) the following text to the end of pentadactylrc with <code>&lt;SHIFT+g&gt;o</code>
<pre>style -name github-font https://github.com/* &lt;&lt;EOM
{
  font-family: "sans-serif" !important;
}
EOM
</pre>

Exit insert mode and ensure the current line is and move the current line is on the one that contains the text 'github-font'
<pre>&lt;ESC&gt;
/github-font</pre>

Switch to the github1.css window and move to the top of the file:
<pre>&lt;CTRL+w&gt;w
gg</pre>

Now type the following
<pre>qqqqq/\ \ clean,&lt;ENTER&gt;[{d{&lt;CTRL+w&gt;w$gpa,&lt;ESC&gt;&lt;CTRL+w&gt;wdapdgg@qq</pre>

 to create a going to create a recursive macro that does the following:
<ul><li>empty any previous q macro (<code>qqq</code>)</li>
<li>create a macro on q (<code>qq</code>)</li>
<li>searches for '  clean,' (<code>/\ \ clean,</code>)</li>
<li>moves the cursor to the first unmatched opening brace (<code>[{</code>)</li>
<li>cuts all the words up to the beginning of the paragraph (<code>d{</code>)</li>
<li>switch to the pentadactylrc window, move to end of line and paste (<code>&lt;CTRL+w&gt;w$gp</code>)</li>
<li>Append a comma after the last pasted character (<code>a,&lt;ESC&gt;</code>)
<li>switch to the github1 window and delete the paragraph around '  clean,' (<code>&lt;CTRL+w&gt;wdap</code>)
<li>deletes everything from current cursor position up to beginning of file (<code>dgg</code>)</li>
<li>call the macro recursively (<code>@q</code></code>)</li>
<li>end the macro (<code>q</code>)</li>
</ul>

To make sure you typed everything correctly, if you type <code>:reg q</code> you should see this
<pre line="">--- Registers ---
"q   /\ \ clean,^M[{d{^Ww$gpa,^[^Wwdapdgg@q</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>500</wp:post_id>
		<wp:post_date>2012-08-13 19:10:01</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edit-githubs-css-pentadactyl-vim</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[css]]></category>
		<category domain="post_tag" nicename="fonts"><![CDATA[fonts]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="pentadactyl"><![CDATA[pentadactyl]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>gist.io: Writing for hackers</title>
		<link>http://archlinux.me/w0ng/2012/08/06/gist-io-writing-for-hackers/</link>
		<pubDate>Sun, 05 Aug 2012 23:49:36 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[Just recently heard of <a href="http://gist.io/" target="_blank">gist.io</a> - a pastebin services that converts markdown formatted files from <a href="https://gist.github.com" target="_blank">https://gist.github.com</a> into HTML.

Useful for those times you want to quickly share info that's off-topic to your blog and to an audience of non manpage readers. Why markdown? It's prettier than plain text and syntactically much simpler than html. GitHub users should like this. 

<img src="http://ompldr.org/vZjAxYQ/gistio.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2012-08-06 10:49:36</wp:post_date>
		<wp:post_date_gmt>2012-08-05 23:49:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gist-io-writing-for-hackers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gist"><![CDATA[gist]]></category>
		<category domain="post_tag" nicename="gist-io"><![CDATA[gist.io]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="markdown"><![CDATA[markdown]]></category>
		<category domain="post_tag" nicename="viewer"><![CDATA[viewer]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>tl;dr: Why systemd?</title>
		<link>http://archlinux.me/w0ng/2012/08/31/tldr-why-systemd/</link>
		<pubDate>Fri, 31 Aug 2012 10:36:40 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=673</guid>
		<description></description>
		<content:encoded><![CDATA[What?
<ul>
	<li><a href="http://freedesktop.org/wiki/Software/systemd" target="_blank">systemd</a> is a system and service manager for Linux, compatible with SysV and LSB init scripts. </li>
	<li>It can act as a drop-in replacement for <a href="http://savannah.nongnu.org/projects/sysvinit" target="_blank">SysVinit</a>.</li>
	<li>Arch Linux will eventually <a href="http://mailman.archlinux.org/pipermail/arch-dev-public/2012-August/023389.html" target="_blank">fully migrate to systemd</a>. </li>
</ul>

When? 
<ul>
	<li>When it's ready. For the <a href="http://mailman.archlinux.org/pipermail/arch-dev-public/2012-April/022803.html" target="_blank">foreseeable future</a>, both SysVinit and systemd will be supported. </li>
</ul>

Why? 
(From <a href="https://bbs.archlinux.org/viewtopic.php?pid=1149530#p1149530" target="_blank">tomegun @ Arch Forums</a>)
<ul>
	<li>It's hot-pluggable.</li>
	<li>It tracks all daemons and processes.</li>
	<li>It's modular.</li>
	<li>It makes better use of udev and dbus.</li>
	<li>It reduces dependencies between daemons.</li>
	<li>It's easier to sandbox configuration options.</li>
	<li>It's a cross-distro project.</li>
	<li>It can use distro-independent service files.</li>
	<li>It uses logind to properly manage user sessions.</li>
	<li>It's faster or just as fast as SysVinit for most users.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>673</wp:post_id>
		<wp:post_date>2012-08-31 21:36:40</wp:post_date>
		<wp:post_date_gmt>2012-08-31 10:36:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tldr-why-systemd</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="systemd"><![CDATA[systemd]]></category>
		<category domain="post_tag" nicename="sysvinit"><![CDATA[sysvinit]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rockbox on Sansa Clip Zip: manual installation</title>
		<link>http://archlinux.me/w0ng/2012/10/04/rockbox-on-sansa-clip-zip/</link>
		<pubDate>Thu, 04 Oct 2012 11:51:10 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=710</guid>
		<description></description>
		<content:encoded><![CDATA[I purchased a <a href="http://www.amazon.com/SanDisk-Sansa-Clip-Player-SDMX22-004G-A57K/dp/B005FVNGRS/ref=sr_1_2?ie=UTF8&qid=1349340396&sr=8-2&keywords=sansa+clip+zip" target="_blank">4gb Sansa Clip Zip from Amazon</a> after researching online for a small, minimalistic, convenient mp3 player.


<strong>What is Rockbox?</strong>

<a href="http://www.rockbox.org/wiki/WhyRockbox" target="_blank">Rockbox</a> is an open-source firmware replacement for compatible mp3 players. It provides additional functionality, efficiency, customisability and improved playback quality.

At time of writing, the only thing that hasn't been fully ported is the <a href="http://www.rockbox.org/wiki/SansaClip#Sansa_Clip_Zip_port_status" target="_blank">sudoku plugin</a>.

<strong>Manual Installation</strong>
For automated installation, you could use the <a href="https://aur.archlinux.org/packages.php?ID=25559" target="_blank">rbutil</a> package from the AUR, which provides a simple GUI interface. However, the GUI interface has a qt dependency. I don't use any other qt applications, so I opted for the manual installation method.

See the <a href="http://www.rockbox.org/wiki/SansaAMS" target="_blank">Rockbox wiki</a> for complete instructions.

<ol>
	<li>Ensure that the <a href="http://kb.sandisk.com/app/answers/detail/a_id/162/related/1" target="_blank">player's USB setting</a> is on MSC (Mass Storage Class).
<pre>On the Clip Zip -> Settings -> System Settings -> USB Mode -> MSC</pre></li>
	<li>Plug in the player and mount it as a normal user.
<pre line="">$ sudo mount -o uid=$(id -u),gid=$(id -g),fmask=113,dmask=002 /dev/disk/by-label/SANSA\\x20CLIPZ /mnt/usb</pre></li>
	<li>Extract the firmware.
<pre line="">$ wget http://build.rockbox.org/data/rockbox-sansaclipzip.zip -O ~/downloads/rockbox-sansaclipzip.zip
$ unzip ~/downloads/rockbox-sansaclipzip.zip -d /mnt/usb
</pre></li>
	<li>Extract the bootloader.
<pre line="">$ wget http://download.rockbox.org/bootloader/sandisk-sansa/mkamsboot/linux-x86-64/mkamsboot -O ~/downloads/rbinstall/mkamsboot
$ wget http://download.rockbox.org/bootloader/sandisk-sansa/clipzip/bootloader-clipzip.sansa -O ~/downloads/rbinstall/bootloader-clipzip.sansa
$ wget http://mp3support.sandisk.com/firmware/clipzip/clipzip01.01.18.zip -O ~/downloads/clipzip_of.zip
$ unzip ~/downloads/clipzip_of.zip -d ~/downloads/rbinstall
</pre></li>
	<li>Install the bootloader.
<pre line="">$ cd ~/downloads/rbinstall
$ chmod +x mkamsboot
$ ./mkamsboot clpza.bin bootloader-clipzip.sansa patched.bin
$ cp patched.bin /mnt/usb/clpza.bin</pre></li>
	<li>Unmount the player. Unplug the usb. Wait for firmware update to finish.
<pre line="">$ sudo umount /mnt/usb</pre></li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>710</wp:post_id>
		<wp:post_date>2012-10-04 22:51:10</wp:post_date>
		<wp:post_date_gmt>2012-10-04 11:51:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rockbox-on-sansa-clip-zip</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="clip-zip"><![CDATA[clip zip]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="manual"><![CDATA[manual]]></category>
		<category domain="post_tag" nicename="rockbox"><![CDATA[rockbox]]></category>
		<category domain="post_tag" nicename="sandisk"><![CDATA[sandisk]]></category>
		<category domain="post_tag" nicename="sansa"><![CDATA[sansa]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[rockbox-on-sansa-clip-zip-2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>RTMPDump: Watch live flash streams in mplayer</title>
		<link>http://archlinux.me/w0ng/2012/11/18/rtmpdump-watch-live-flash-streams-in-mplayer/</link>
		<pubDate>Sun, 18 Nov 2012 11:17:49 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=773</guid>
		<description></description>
		<content:encoded><![CDATA[Flash on Linux sucks. You may find it useful to stream live flash streams to mplayer (or vlc).

Example live flash stream: <a href="http://cricfree.tv/sky-sports-1-live-stream.php" target="_blank">http://cricfree.tv/sky-sports-1-live-stream.php</a>. Screenshot of it in mplayer: <a href="http://ompldr.org/vZ2NubA" target="_blank">http://ompldr.org/vZ2NubA</a>.

Redirect RTMP traffic through to local port:
<pre><strong>$ sudo iptables -t nat -A OUTPUT -p tcp --dport 1935 -j REDIRECT</strong></pre>


Start RTMP Server to hold sniffed RTMP info:
<pre><strong>$ rtmpsrv</strong>

RTMP Server v2.4
(c) 2010 Andrej Stepanchuk, Howard Chu; license: GPL

Streaming on rtmp://0.0.0.0:1935
...</pre>


Open or refresh the link to live flash stream in your web browser. The corresponding rtmpdump command output will be printed in the RTMP Server window.  e.g.
<pre>...
rtmpdump -r "rtmp://212.7.212.22:1935/lb/" -a "lb/" -f "LNX 11,2,202,251" -W "http://cdn.yycast.com/player/player.swf" -p "http://www.yycast.com" -y "kjghfsdm" -o kjghfsdm.flv
...
</pre>


Close RTMP Server with Ctrl-C:
<pre>...
^CCaught signal: 2, cleaning up, just a second...</pre>


Delete previously added iptables rule:
<pre><strong>$ sudo iptables -t nat -D OUTPUT -p tcp --dport 1935 -j REDIRECT</strong></pre>


Test sniffed rtmpdump command, omitting output:
<pre><strong>$ rtmpdump -r "rtmp://212.7.212.22:1935/lb/" -a "lb/" -f "LNX 11,2,202,251" -W "http://cdn.yycast.com/player/player.swf" -p "http://www.yycast.com" -y "kjghfsdm"</strong>

RTMPDump v2.4
(c) 2010 Andrej Stepanchuk, Howard Chu, The Flvstreamer Team; license: GPL
WARNING: You haven't specified an output file (-o filename), using stdout
Connecting ...
INFO: Connected...
ERROR: rtmp server sent error
ERROR: rtmp server requested close
</pre>


If similar errors are received, analyse sniffed command with the verbose flag, -V:
<pre><strong>$ rtmpdump -r "rtmp://212.7.212.22:1935/lb/" -a "lb/" -f "LNX 11,2,202,251" -W "http://cdn.yycast.com/player/player.swf" -p "http://www.yycast.com" -y "kjghfsdm" -V</strong>

...
DEBUG: Property: &lt;Name:              level, STRING: error&gt;
DEBUG: Property: &lt;Name:               code, STRING: NetConnection.Connect.Rejected&gt;
DEBUG: Property: &lt;Name:        description, STRING: Connection failed: Application rejected connection.&gt;
DEBUG: Property: &lt;Name:                 ex, OBJECT&gt;
DEBUG: (object begin)
DEBUG: Property: &lt;Name:           redirect, STRING: rtmp://95.211.186.227:1935/live/_definst_&gt;
DEBUG: Property: &lt;Name:               code, NUMBER: 302.00&gt;
DEBUG: (object end)
DEBUG: Property: &lt;Name:           clientid, NUMBER: 1754134368.00&gt;
...
</pre>


This log shows errors due to unhandled URL redirection. Update rtmpdump command to reflect direct URL:
<pre><strong>$ rtmpdump -r "rtmp://95.211.186.227:1935/live/_definst_" -a "live/" -f "LNX 11,2,202,251" -W "http://cdn.yycast.com/player/player.swf" -p "http://www.yycast.com" -y "kjghfsdm" -V</strong>

...
DEBUG: Property: &lt;Name:              level, STRING: status&gt;
DEBUG: Property: &lt;Name:               code, STRING: NetConnection.Connect.Success&gt;
DEBUG: Property: &lt;Name:        description, STRING: Connection succeeded.&gt;
DEBUG: Property: &lt;Name:               data, OBJECT&gt;
...</pre>


Error message is now gone. Remove verbose option. Pipe output to mplayer:  
<pre><strong>$ rtmpdump -r "rtmp://95.211.186.227:1935/live/_definst_" -a "live/" -f "LNX 11,2,202,251" -W "http://cdn.yycast.com/player/player.swf" -p "http://www.yycast.com" -y "kjghfsdm" | mplayer -</strong></pre>

Other things to try in case of <code>rtmpdump</code> errors:
<ul>
	<li>Adding the <code>--live</code> option.</li>

	<li>Using <code>--port 80</code>.</li>

	<li>Increase cache when piping to mplayer: <code>rtmpdump... | mplayer -cache 4096 -</code></li>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>773</wp:post_id>
		<wp:post_date>2012-11-18 22:17:49</wp:post_date>
		<wp:post_date_gmt>2012-11-18 11:17:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rtmpdump-watch-live-flash-streams-in-mplayer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="flash"><![CDATA[flash]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="livestream"><![CDATA[livestream]]></category>
		<category domain="post_tag" nicename="mplayer"><![CDATA[mplayer]]></category>
		<category domain="post_tag" nicename="rtmpdump"><![CDATA[rtmpdump]]></category>
		<category domain="post_tag" nicename="rtmpsrv"><![CDATA[rtmpsrv]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1022</wp:comment_id>
			<wp:comment_author><![CDATA[StoneCut]]></wp:comment_author>
			<wp:comment_author_email>stonecut@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.83.217.100</wp:comment_author_IP>
			<wp:comment_date>2012-11-21 07:33:17</wp:comment_date>
			<wp:comment_date_gmt>2012-11-20 20:33:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very useful article, thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353443597.2979";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353445967.1546";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1071</wp:comment_id>
			<wp:comment_author><![CDATA[andy]]></wp:comment_author>
			<wp:comment_author_email>gpl4all@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.137.157.239</wp:comment_author_IP>
			<wp:comment_date>2012-11-26 04:33:41</wp:comment_date>
			<wp:comment_date_gmt>2012-11-25 17:33:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it's very useful tip, thank you buddy!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353864821.4084";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:58:{s:15:"comment_post_ID";s:3:"773";s:14:"comment_author";s:4:"andy";s:20:"comment_author_email";s:17:"gpl4all@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:38:"it's very useful tip, thank you buddy!";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:15:"118.137.157.239";s:10:"user_agent";s:68:"Mozilla/5.0 (X11; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0";s:8:"referrer";s:81:"http://archlinux.me/w0ng/2012/11/18/rtmpdump-watch-live-flash-streams-in-mplayer/";s:4:"blog";s:24:"http://archlinux.me/w0ng";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:81:"http://archlinux.me/w0ng/2012/11/18/rtmpdump-watch-live-flash-streams-in-mplayer/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"andy";s:10:"POST_email";s:17:"gpl4all@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:38:"it's very useful tip, thank you buddy!";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"773";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"405ad068fb";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:26:"/w0ng/wp-comments-post.php";s:18:"REDIRECT_UNIQUE_ID";s:24:"ULJWdX8AAAEAAFqfi7oAAAAg";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"UNIQUE_ID";s:24:"ULJWdX8AAAEAAFqfi7oAAAAg";s:9:"HTTP_HOST";s:12:"archlinux.me";s:15:"HTTP_USER_AGENT";s:68:"Mozilla/5.0 (X11; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:8:"HTTP_DNT";s:1:"1";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:81:"http://archlinux.me/w0ng/2012/11/18/rtmpdump-watch-live-flash-streams-in-mplayer/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"187";s:4:"PATH";s:60:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:12:"archlinux.me";s:11:"SERVER_ADDR";s:15:"167.142.225.168";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:15:"118.137.157.239";s:13:"DOCUMENT_ROOT";s:23:"/home/http/archlinux.me";s:12:"SERVER_ADMIN";s:19:"crouse@archlinux.us";s:15:"SCRIPT_FILENAME";s:44:"/home/http/archlinux.me/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"36865";s:12:"REDIRECT_URL";s:26:"/w0ng/wp-comments-post.php";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1353864821";s:25:"comment_post_modified_gmt";s:19:"2012-11-18 12:03:00";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1353893547.2658";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>test</title>
		<link>http://archlinux.me/w0ng/2012/11/18/test/</link>
		<pubDate>Sun, 18 Nov 2012 11:21:07 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=825</guid>
		<description></description>
		<content:encoded><![CDATA[<pre>" set max syntax columns to prevent lag on long lines (default: 3000)
set synmaxcol=128
" disable cursorline (default: nocursorline)
set nocursorline "</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date>2012-11-18 22:21:07</wp:post_date>
		<wp:post_date_gmt>2012-11-18 11:21:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1353237691]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test2</title>
		<link>http://archlinux.me/w0ng/2012/11/18/test2/</link>
		<pubDate>Sun, 18 Nov 2012 11:29:15 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=833</guid>
		<description></description>
		<content:encoded><![CDATA[When using the <a href="https://github.com/altercation/solarized/blob/master/xresources-colors-solarized/Xresources" target="_blank">recommended Solarized colours</a> in <code>~/.Xresources</code>, dircolors output isn't very distinguishable. 

Here's what it looks like:
<img src="http://dl.dropbox.com/u/23813887/dircolors1.png" alt="" />

Here's what we want:
<img src="http://dl.dropbox.com/u/23813887/dircolors2.png" alt="" />

Copy the default dircolors to <code>$HOME</code>
<pre>$ dircolors -p &gt; ~/.dir_colours</pre>

Make the following changes to <code>~/.dir_colours</code>
<pre>--- .dir_colours.orig	2012-04-21 19:48:39.029808008 +1000
+++ .dir_colours	2012-04-21 18:28:38.645813921 +1000
@@ -68,8 +68,8 @@ TERM xterm-debian
 #NORMAL 00 # no color code at all
 #FILE 00 # regular file: use no color at all
 RESET 0 # reset to "normal" color
-DIR 01;34 # directory
-LINK 01;36 # symbolic link. (If you set this to 'target' instead of a
+DIR 00;34 # directory
+LINK 00;36 # symbolic link. (If you set this to 'target' instead of a
  # numerical value, the color is as for the file pointed to.)
 MULTIHARDLINK 00 # regular file with more than one link
 FIFO 40;33 # pipe
@@ -85,7 +85,7 @@ STICKY_OTHER_WRITABLE 30;42 # dir that i
 OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
 STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable
 # This is for files with execute permission:
-EXEC 01;32
+EXEC 00;32
 # List any file extensions like '.gz' or '.tar' that you would like ls
 # to colorize below. Put the extension, a space, and the color init string.
 # (and any comments you want to add after a '#')
@@ -184,19 +184,19 @@ EXEC 01;32
 .ogv 01;35
 .ogx 01;35
 # audio formats
-.aac 00;36
-.au 00;36
-.flac 00;36
-.mid 00;36
-.midi 00;36
-.mka 00;36
-.mp3 00;36
-.mpc 00;36
-.ogg 00;36
-.ra 00;36
-.wav 00;36
+.aac 00;33
+.au 00;33
+.flac 00;33
+.mid 00;33
+.midi 00;33
+.mka 00;33
+.mp3 00;33
+.mpc 00;33
+.ogg 00;33
+.ra 00;33
+.wav 00;33
 # http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions
-.axa 00;36
-.oga 00;36
-.spx 00;36
-.xspf 00;36
+.axa 00;33
+.oga 00;33
+.spx 00;33
+.xspf 00;33
</pre>

Finally, run the following line to append to the colours to <code>~/.bashrc</code> or <code>~/.zshrc</code>:
<pre>$ echo "eval $(dircolors ~/.dir_colours)" &gt;&gt; ~/.zshrc</code></pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date>2012-11-18 22:29:15</wp:post_date>
		<wp:post_date_gmt>2012-11-18 11:29:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>test2</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1353238178]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
