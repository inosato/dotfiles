<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3.2" created="2012-05-02 14:30" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>w0ng&#039;s Arch Linux Blog</title>
	<link>http://archlinux.me/w0ng</link>
	<description>Just another Arch Linux Blog site</description>
	<pubDate>Wed, 02 May 2012 14:30:45 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://archlinux.me/</wp:base_site_url>
	<wp:base_blog_url>http://archlinux.me/w0ng</wp:base_blog_url>

	<wp:author><wp:author_id>57</wp:author_id><wp:author_login>w0ng</wp:author_login><wp:author_email>akamchoiw@gmail.com</wp:author_email><wp:author_display_name><![CDATA[w0ng]]></wp:author_display_name><wp:author_first_name><![CDATA[Andrew]]></wp:author_first_name><wp:author_last_name><![CDATA[Wong]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>linux</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Linux]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>32</wp:term_id><wp:tag_slug>bot</wp:tag_slug><wp:tag_name><![CDATA[bot]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>18</wp:term_id><wp:tag_slug>colour</wp:tag_slug><wp:tag_name><![CDATA[colour]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>25</wp:term_id><wp:tag_slug>cousine</wp:tag_slug><wp:tag_name><![CDATA[cousine]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>17</wp:term_id><wp:tag_slug>cursor</wp:tag_slug><wp:tag_name><![CDATA[cursor]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>34</wp:term_id><wp:tag_slug>dircolors</wp:tag_slug><wp:tag_name><![CDATA[dircolors]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>35</wp:term_id><wp:tag_slug>dwm</wp:tag_slug><wp:tag_name><![CDATA[dwm]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>29</wp:term_id><wp:tag_slug>eggdrop</wp:tag_slug><wp:tag_name><![CDATA[eggdrop]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>8</wp:term_id><wp:tag_slug>git</wp:tag_slug><wp:tag_name><![CDATA[git]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>24</wp:term_id><wp:tag_slug>ipython</wp:tag_slug><wp:tag_name><![CDATA[ipython]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>31</wp:term_id><wp:tag_slug>irc</wp:tag_slug><wp:tag_name><![CDATA[irc]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>14</wp:term_id><wp:tag_slug>lines</wp:tag_slug><wp:tag_name><![CDATA[lines]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>13</wp:term_id><wp:tag_slug>long</wp:tag_slug><wp:tag_name><![CDATA[long]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>36</wp:term_id><wp:tag_slug>pretty</wp:tag_slug><wp:tag_name><![CDATA[pretty]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>10</wp:term_id><wp:tag_slug>prompt</wp:tag_slug><wp:tag_name><![CDATA[prompt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>python2</wp:tag_slug><wp:tag_name><![CDATA[python2]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>27</wp:term_id><wp:tag_slug>semicolon</wp:tag_slug><wp:tag_name><![CDATA[semicolon]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>30</wp:term_id><wp:tag_slug>setup</wp:tag_slug><wp:tag_name><![CDATA[setup]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>12</wp:term_id><wp:tag_slug>slow</wp:tag_slug><wp:tag_name><![CDATA[slow]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>33</wp:term_id><wp:tag_slug>solarized</wp:tag_slug><wp:tag_name><![CDATA[solarized]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>9</wp:term_id><wp:tag_slug>status</wp:tag_slug><wp:tag_name><![CDATA[status]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>37</wp:term_id><wp:tag_slug>statusbar</wp:tag_slug><wp:tag_name><![CDATA[statusbar]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>15</wp:term_id><wp:tag_slug>syntax</wp:tag_slug><wp:tag_name><![CDATA[syntax]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>28</wp:term_id><wp:tag_slug>tilde</wp:tag_slug><wp:tag_name><![CDATA[tilde]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>20</wp:term_id><wp:tag_slug>tmux</wp:tag_slug><wp:tag_name><![CDATA[tmux]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>26</wp:term_id><wp:tag_slug>ttf-google-webfonts</wp:tag_slug><wp:tag_name><![CDATA[ttf-google-webfonts]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>21</wp:term_id><wp:tag_slug>urxvt</wp:tag_slug><wp:tag_name><![CDATA[urxvt]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>19</wp:term_id><wp:tag_slug>vicmd</wp:tag_slug><wp:tag_name><![CDATA[vicmd]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>11</wp:term_id><wp:tag_slug>vim</wp:tag_slug><wp:tag_name><![CDATA[vim]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>23</wp:term_id><wp:tag_slug>virtualenv</wp:tag_slug><wp:tag_name><![CDATA[virtualenv]]></wp:tag_name></wp:tag>
	<wp:tag><wp:term_id>7</wp:term_id><wp:tag_slug>zsh</wp:tag_slug><wp:tag_name><![CDATA[zsh]]></wp:tag_name></wp:tag>

	<generator>http://wordpress.org/?v=3.3.2</generator>

	<item>
		<title>Git status in zsh prompt - the easy way</title>
		<link>http://archlinux.me/w0ng/2012/03/27/git-status-in-zsh-prompt-the-easy-way/</link>
		<pubDate>Tue, 27 Mar 2012 21:46:31 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=6</guid>
		<description></description>
		<content:encoded><![CDATA[Copy the completion file to your home directory:

<pre line="">$ cp /usr/share/git/completion/git-completion.bash ~/.git-completion.bash</pre>

Add the following to your <code>~/.zshrc</code>

<pre lang="bash" line="75">source ~/.git-completion.bash
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM="auto"
PROMPT='%{$fg[cyan]%}%n%{$fg[blue]%}@%{$fg[magenta]%}%m %{$fg[yellow]%}%~ %{$fg[red]%}$(__git_ps1 " (%s)")
%{$fg[green]%}%#%{$reset_color%} '</pre>

You may be seeing the following error in your prompt whenever you cd into a local git repository:

<pre line="">local:2: command not found: svn_url_pattern</pre>

As discussed <a href="http://www.spinics.net/lists/git/msg177287.html" target="_blank">here</a>, this is due to syntactical differences between bash and zsh. Make the following changes in <code>~/.git-completion.bash</code> to fix this:

<pre>--- /usr/share/git/completion/git-completion.bash 2012-03-13 10:30:26.000000000 +1100
+++ ./git-completion.bash 2012-03-26 10:22:19.957256527 +1100
@@ -94,8 +94,9 @@ __gitdir ()
__git_ps1_show_upstream ()
{
local key value
- local svn_remote=() svn_url_pattern count n
+ local svn_remote svn_url_pattern count n
local upstream=git legacy="" verbose=""
+ svn_remote=()

# get some config options from git-config
local output="$(git config -z --get-regexp '^(svn-remote\..*\.url|bash\.showupstream)$' 2&gt;/dev/null | tr '\n' '\n ')"
@@ -291,7 +292,7 @@ __git_ps1 ()

if [ -n "${GIT_PS1_SHOWUNTRACKEDFILES-}" ]; then
if [ -n "$(git ls-files --others --exclude-standard)" ]; then
- u="%"
+ u="!"
fi
fi</pre>

<a href="http://ompldr.org/vZDZhcw/git-status-zsh-prompt.png"><img class="size-full wp-image-29 alignnone" src="http://dl.dropbox.com/u/23813887/git-status-zsh-prompt.png" alt="" width="478" height="160" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2012-03-27 21:46:31</wp:post_date>
		<wp:post_date_gmt>2012-03-27 21:46:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-status-in-zsh-prompt-the-easy-way</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="prompt"><![CDATA[prompt]]></category>
		<category domain="post_tag" nicename="status"><![CDATA[status]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Juan]]></wp:comment_author>
			<wp:comment_author_email>cpfiro@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.130.78.238</wp:comment_author_IP>
			<wp:comment_date>2012-04-25 06:59:36</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 19:59:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, im new to arch and the arch forum as well. I saw you had a really cool wallpaper, is there anyway you could email it to me? 

Thank you very much
Juan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335297576.6955";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:57:{s:15:"comment_post_ID";s:1:"6";s:14:"comment_author";s:4:"Juan";s:20:"comment_author_email";s:16:"cpfiro@gmail.com";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:157:"Hi, im new to arch and the arch forum as well. I saw you had a really cool wallpaper, is there anyway you could email it to me? 

Thank you very much
Juan";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"24.130.78.238";s:10:"user_agent";s:68:"Mozilla/5.0 (X11; Linux x86_64; rv:11.0) Gecko/20100101 Firefox/11.0";s:8:"referrer";s:74:"http://archlinux.me/w0ng/2012/03/27/git-status-in-zsh-prompt-the-easy-way/";s:4:"blog";s:24:"http://archlinux.me/w0ng";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:74:"http://archlinux.me/w0ng/2012/03/27/git-status-in-zsh-prompt-the-easy-way/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"Juan";s:10:"POST_email";s:16:"cpfiro@gmail.com";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:157:"Hi, im new to arch and the arch forum as well. I saw you had a really cool wallpaper, is there anyway you could email it to me? 

Thank you very much
Juan";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:1:"6";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"32c8b12b03";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:26:"/w0ng/wp-comments-post.php";s:18:"REDIRECT_UNIQUE_ID";s:24:"T5cGKH8AAAEAAG9MLtYAAAAP";s:15:"REDIRECT_STATUS";s:3:"200";s:9:"UNIQUE_ID";s:24:"T5cGKH8AAAEAAG9MLtYAAAAP";s:9:"HTTP_HOST";s:12:"archlinux.me";s:15:"HTTP_USER_AGENT";s:68:"Mozilla/5.0 (X11; Linux x86_64; rv:11.0) Gecko/20100101 Firefox/11.0";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-us,en;q=0.5";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:12:"HTTP_REFERER";s:74:"http://archlinux.me/w0ng/2012/03/27/git-status-in-zsh-prompt-the-easy-way/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"315";s:4:"PATH";s:60:"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:12:"archlinux.me";s:11:"SERVER_ADDR";s:15:"167.142.225.168";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"24.130.78.238";s:13:"DOCUMENT_ROOT";s:23:"/home/http/archlinux.me";s:12:"SERVER_ADMIN";s:19:"crouse@archlinux.us";s:15:"SCRIPT_FILENAME";s:44:"/home/http/archlinux.me/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"37561";s:12:"REDIRECT_URL";s:26:"/w0ng/wp-comments-post.php";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1335297576";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1335323520.6345";s:7:"message";s:43:"w0ng changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"w0ng";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Vim slow on long lines with syntax enabled</title>
		<link>http://archlinux.me/w0ng/2012/03/28/vim-slow-long-lines-syntax-enabled/</link>
		<pubDate>Wed, 28 Mar 2012 07:39:43 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[Vim is my default text editor. Besides coding, I also use vim with the <a href="https://github.com/matthias-guenther/hammer.vim" target="_blank">Hammer plugin</a> to do most my basic word processing.

One major annoyance I've found is that terminal vim responds extremely slowly when dealing with files that contain long lines (.e.g. xml, markdown, php, etc.).

Some simple changes in <code>~/.vimrc</code> to overcome this:
<pre lang="vim" line="52">" set max syntax columns to prevent lag on long lines (default: 3000)
set synmaxcol=128
" disable cursorline (default: nocursorline)
set nocursorline "</pre>

To compensate for loss of the visual aid in the cursorline, in my vim theme and <code>~/.Xresources</code>, I changed my cursor colour from the default grey/white to yellow.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2012-03-28 18:39:43</wp:post_date>
		<wp:post_date_gmt>2012-03-28 07:39:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vim-slow-long-lines-syntax-enabled</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="lines"><![CDATA[lines]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="long"><![CDATA[long]]></category>
		<category domain="post_tag" nicename="slow"><![CDATA[slow]]></category>
		<category domain="post_tag" nicename="syntax"><![CDATA[syntax]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>1hr audio podcast with the author of Solarized vim theme</title>
		<link>http://archlinux.me/w0ng/2012/03/31/1hr-audio-podcast-with-the-author-of-solarized-vim-theme/</link>
		<pubDate>Sat, 31 Mar 2012 10:29:19 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[http://thechangelog.com/post/20168759748/episode-0-7-7-solarized-and-linux-on-the-desktop-with-et

Solarized colour scheme author talks about his scheme, Arch Linux, xmonad, Haskell terminal fonts, and more.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2012-03-31 21:29:19</wp:post_date>
		<wp:post_date_gmt>2012-03-31 10:29:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>1hr-audio-podcast-with-the-author-of-solarized-vim-theme</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b38fe483800647d9d13e53497f812051</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b15f11204ac87797f5c800b2451a0b48</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Zsh: Change cursor colour to indicate vi-mode</title>
		<link>http://archlinux.me/w0ng/2012/04/06/zsh-change-cursor-colour-to-indicate-vi-mode/</link>
		<pubDate>Thu, 05 Apr 2012 17:30:15 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[From <a href="https://bbs.archlinux.org/viewtopic.php?id=95078" target="_blank">Arch Forums</a>.

It's possible to change the cursor in urxvt when using zsh to indicate the current vi mode (e.g. grey for INSERT, red for NORMAL).

Append the following to <code>~/.zshrc</code>

<pre lang="bash" line="33"># change cursor colour depending on vi mode
zle-keymap-select () {
  if [ "$TERM" = "rxvt-unicode-256color" ]; then
if [ $KEYMAP = vicmd ]; then
echo -ne "\033]12;red\007"
    else
echo -ne "\033]12;grey\007"
    fi
fi
}; zle -N zle-keymap-select
zle-line-init () {
  zle -K viins
  echo -ne "\033]12;grey\007"
}; zle -N zle-line-init</pre>

Zsh auto-detects and sets the editing mode (default: emacs) to vi if <code>$EDITOR=vim</code>. If this environment variable isn't set, or is set to something else, you'll also need to add <code>bindkey -v</code> to your <code>~/.zshrc</code>.

<img src="http://dl.dropbox.com/u/23813887/vicmd-insert.png" alt="" /> <img src="http://dl.dropbox.com/u/23813887/vicmd-normal.png" alt="" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2012-04-06 04:30:15</wp:post_date>
		<wp:post_date_gmt>2012-04-05 17:30:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zsh-change-cursor-colour-to-indicate-vi-mode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="colour"><![CDATA[colour]]></category>
		<category domain="post_tag" nicename="cursor"><![CDATA[cursor]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="urxvt"><![CDATA[urxvt]]></category>
		<category domain="post_tag" nicename="vicmd"><![CDATA[vicmd]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make IPython recognise virtualenv</title>
		<link>http://archlinux.me/w0ng/2012/04/09/make-ipython-recognise-virtualenv/</link>
		<pubDate>Mon, 09 Apr 2012 02:22:57 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[IPython doesn't currently recognise when you're in a virtualenv. (See <a href="https://github.com/ipython/ipython/issues/1171" target="_blank">high priority issue</a>).

There are currently 3 popular workarounds for those without root access.

Workaround #1. Add the following to <code>~/.bashrc</code> or <code>~/.zshrc</code>:

<pre lang="bash">alias ipython="python /usr/bin/ipython"</pre>

Workaround #2. Install a local virtualenv copy of ipython:

<pre>$ pip install ipython</pre>

Workaround #3. Create <code>~/.config/ipython/profile_default/ipython_virtualenv.py</code> with the following (for Python3):

<pre lang="python" line="1"># Modified for Python 3 (https://gist.github.com/1759781)
from os import environ
from os.path import join, sep

if 'VIRTUAL_ENV' in environ:
    virtual_env_dir = environ['VIRTUAL_ENV']
    activate_this = join(virtual_env_dir, "bin", "activate_this.py")
    exec(compile(open(activate_this).read(), activate_this, 'exec'),
         dict(__file__=activate_this))
    virtual_env_name = virtual_env_dir.split(sep)[-1]
    message = 'virtualenv "{0}" ({1})]'.format(virtual_env_name,
                                               virtual_env_dir)
    print(message)
    del virtual_env_dir
del environ, join, sep</pre>
Add the following to <code>~/.config/ipython/profile_default/ipython_config.py</code>:
<pre lang="python">c.InteractiveShellApp.exec_files = ['ipython_virtualenv.py']</pre>
From the <a href="http://ipython.org/faq.html#how-do-i-make-ipython-recognise-my-virtualenvs">IPython FAQ</a>, those with root access can access it by modifying the shebang in <code>/usr/bin/ipython</code>
<pre lang="bash" line="1">#!/usr/bin/env python</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2012-04-09 13:22:57</wp:post_date>
		<wp:post_date_gmt>2012-04-09 02:22:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-ipython-recognise-virtualenv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ipython"><![CDATA[ipython]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="python2"><![CDATA[python2]]></category>
		<category domain="post_tag" nicename="virtualenv"><![CDATA[virtualenv]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up eggdrop</title>
		<link>http://archlinux.me/w0ng/2012/04/18/setting-up-eggdrop/</link>
		<pubDate>Wed, 18 Apr 2012 02:03:22 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[Eggdrop is an open source IRC bot. Since no ArchWiki article exists for eggdrop, here's a quick getting started guide.

Download the aur eggdrop package:
<pre line="">$ yaourt -S eggdrop</pre>
Copy the configuration file to a local directory:
<pre line=""># mkdir ~/.eggdrop
# cp /etc/eggdrop.conf ~/.eggdrop</pre>
Modify <code>~/.eggdrop/eggdrop.conf</code> using the eggdrop wiki as a guide:
<a href="http://eggwiki.org/Eggdrop.conf" target="_blank">http://eggwiki.org/Eggdrop.conf</a>

Start eggdrop:
<pre line="">cd ~/.eggdrop
eggdrop eggdrop.conf</pre>
Message your bot from your IRC client to setup an admin password:
<pre line="">/msg YourBotsName hello</pre>
Control your bot by via DCC:
<pre line="">/ctcp YourBotsName chat
/dcc chat YourBotsName</pre>
To start eggdrop when you startx, add to <code>~/.xinitrc</code>:
<pre>cd ~/.eggdrop &amp;&amp; eggdrop eggdrop.conf &amp;</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date>2012-04-18 13:03:22</wp:post_date>
		<wp:post_date_gmt>2012-04-18 02:03:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-eggdrop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bot"><![CDATA[bot]]></category>
		<category domain="post_tag" nicename="eggdrop"><![CDATA[eggdrop]]></category>
		<category domain="post_tag" nicename="irc"><![CDATA[irc]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="setup"><![CDATA[setup]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fixing Cousine from ttf-google-webfonts</title>
		<link>http://archlinux.me/w0ng/2012/04/18/fixing-cousine-from-ttf-google-webfonts/</link>
		<pubDate>Wed, 18 Apr 2012 00:55:59 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[This refers to the latest ttf-google-webfonts aur package (version: 2369-1, revision: f50f26f0c77c).

Problem #1: tilde character looks like a dash when font size is less than 10
Problem #2: semicolon glyph is missing

I've entered a bug report <a href="http://code.google.com/p/googlefontdirectory/issues/detail?id=132" target="_blank">here</a>

Fix:
<ol>
<li>Download latest files from the source: 
<a href="https://googlefontdirectory.googlecode.com/hg/cousine/src/" target="_blank">https://googlefontdirectory.googlecode.com/hg/cousine/src/</a></li>

<li>Install fontforge
<pre line=""># pacman -S fontforge</pre></li>

<li>Open <code>Cousine-Regular.ttf</code> in <code>fontforge</code></li>

<li>Element -&gt; Font Info -&gt; PS Names</li>

<li>Change font name to distinguish it from the ttf-google-webfonts package
<pre line="">Fontname: CousineRegen
Family Name: Cousine Regen
Name of Humans: Cousine Regen</pre></li>

<li>OK -&gt; Change</li>
<li>File -&gt; Generate Fonts -&gt; Truetype -&gt; untick Validate before saving -&gt; Save</li>

<li>Repeat 3-7 for the bold, italic and boldItalic ttf files</li>

<li>Add <code>CousineRegen*.ttf</code> to a directory in your FontPath</li>
<li>Refresh font cache
<pre line=""># fc-cache -fv</pre></li>
</ol>

tl;dr: Source ttf fonts provide missing glyph. Regenerating fonts in fontforge fixes tilde character at low fontsizes.

Before vs after:
<img src="http://dl.dropbox.com/u/23813887/cousine1.png" alt="" />
<img src="http://dl.dropbox.com/u/23813887/cousine2.png" alt="" />
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2012-04-18 11:55:59</wp:post_date>
		<wp:post_date_gmt>2012-04-18 00:55:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fixing-cousine-from-ttf-google-webfonts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cousine"><![CDATA[cousine]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="semicolon"><![CDATA[semicolon]]></category>
		<category domain="post_tag" nicename="tilde"><![CDATA[tilde]]></category>
		<category domain="post_tag" nicename="ttf-google-webfonts"><![CDATA[ttf-google-webfonts]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Better dircolors with Solarized</title>
		<link>http://archlinux.me/w0ng/2012/04/21/better-dircolors-with-solarized/</link>
		<pubDate>Sat, 21 Apr 2012 10:00:18 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=171</guid>
		<description></description>
		<content:encoded><![CDATA[When using the <a href="https://github.com/altercation/solarized/blob/master/xresources-colors-solarized/Xresources" target="_blank">recommended Solarized colours</a> in <code>~/.Xresources</code>, dircolors output isn't very distinguishable. 

Here's what it looks like:
<img src="http://dl.dropbox.com/u/23813887/dircolors1.png" alt="" />

Here's what we want:
<img src="http://dl.dropbox.com/u/23813887/dircolors2.png" alt="" />

Copy the default dircolors to <code>$HOME</code>
<pre>$ dircolors -p &gt; ~/.dir_colours</pre>

Make the following changes to <code>~/.dir_colours</code>
<pre lang="diff" line="1">--- .dir_colours.orig	2012-04-21 19:48:39.029808008 +1000
+++ .dir_colours	2012-04-21 18:28:38.645813921 +1000
@@ -68,8 +68,8 @@ TERM xterm-debian
 #NORMAL 00 # no color code at all
 #FILE 00 # regular file: use no color at all
 RESET 0 # reset to "normal" color
-DIR 01;34 # directory
-LINK 01;36 # symbolic link. (If you set this to 'target' instead of a
+DIR 00;34 # directory
+LINK 00;36 # symbolic link. (If you set this to 'target' instead of a
  # numerical value, the color is as for the file pointed to.)
 MULTIHARDLINK 00 # regular file with more than one link
 FIFO 40;33 # pipe
@@ -85,7 +85,7 @@ STICKY_OTHER_WRITABLE 30;42 # dir that i
 OTHER_WRITABLE 34;42 # dir that is other-writable (o+w) and not sticky
 STICKY 37;44 # dir with the sticky bit set (+t) and not other-writable
 # This is for files with execute permission:
-EXEC 01;32
+EXEC 00;32
 # List any file extensions like '.gz' or '.tar' that you would like ls
 # to colorize below. Put the extension, a space, and the color init string.
 # (and any comments you want to add after a '#')
@@ -184,19 +184,19 @@ EXEC 01;32
 .ogv 01;35
 .ogx 01;35
 # audio formats
-.aac 00;36
-.au 00;36
-.flac 00;36
-.mid 00;36
-.midi 00;36
-.mka 00;36
-.mp3 00;36
-.mpc 00;36
-.ogg 00;36
-.ra 00;36
-.wav 00;36
+.aac 00;33
+.au 00;33
+.flac 00;33
+.mid 00;33
+.midi 00;33
+.mka 00;33
+.mp3 00;33
+.mpc 00;33
+.ogg 00;33
+.ra 00;33
+.wav 00;33
 # http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions
-.axa 00;36
-.oga 00;36
-.spx 00;36
-.xspf 00;36
+.axa 00;33
+.oga 00;33
+.spx 00;33
+.xspf 00;33
</pre>

Finally, run the following line to append to the colours to <code>~/.bashrc</code> or <code>~/.zshrc</code>:
<pre>$ echo "eval $(dircolors ~/.dir_colours)" &gt;&gt; ~/.zshrc</code></pre>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date>2012-04-21 21:00:18</wp:post_date>
		<wp:post_date_gmt>2012-04-21 10:00:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>better-dircolors-with-solarized</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dircolors"><![CDATA[dircolors]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="solarized"><![CDATA[solarized]]></category>
		<category domain="post_tag" nicename="zsh"><![CDATA[zsh]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DWM: A pretty statusbar</title>
		<link>http://archlinux.me/w0ng/2012/05/01/dwm-a-pretty-statusbar/</link>
		<pubDate>Tue, 01 May 2012 11:27:55 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[dwm uses <code>xsetroot</code> to pipe text into its statusbar.
By default, the statusbar does not support colours and does not support xbm icons.
You could get this functionality by using third party apps such as <a href="http://sites.google.com/site/gotmor/dzen" target="_blank">dzen</a> with <a href="http://conky.sourceforge.net/" target="_blank">conky</a>.

To get this functionality natively within <strong>dwm 6.0</strong>:
<ul>
<li>Patch your dwm config with jasonwryan's <a href="http://beta.intuxication.org/hg/jasonwryan/archer/file/322deebe90ff/Build/dwm/statuscolors-6.0.diff" target="_blank">statuscolors-6.0</a></li>
<li>Take a look at jasonwryan's <a href="https://bitbucket.org/jasonwryan/eeepc/src/241da582a0fd/Scripts/dwm-status" target="_blank">dwm-status</a> script the <a href="http://dzen.geekmode.org/dwiki/doku.php?id=dzen:dzen-and-xmonad" target="_blank">dzen</a> website for some ideas of what text can be piped</li>
<li>Follow <a href="https://bbs.archlinux.org/viewtopic.php?pid=724236#p724236" target="_blank">Lokaltag's tutorial</a> to draw symbols into your favourite bitmap font.</li>
<li>Look at dzen's <a href="http://dzen.geekmode.org/dwiki/doku.php?id=dzen:icon-packs" target="_blank">icon packs</a> for some ideas of what can be drawn.</li>
</ul>

Here's what my statusbar currently looks like (click for full length image):
<a href="http://dl.dropbox.com/u/23813887/statusbar.png" target="_blank"><img src="http://dl.dropbox.com/u/23813887/statusbar-thumb.png" alt="" /></a>

For the lazy, here's how to get the statusbar to look like the above:
<ol>
<li>Save font as <code>~/.fonts/terminus2.bdf</code>:
<a href="https://github.com/w0ng/dwm/blob/master/terminus2.bdf" target="_blank">https://github.com/w0ng/dwm/blob/master/terminus2.bdf</a></li>

<li>Update font cache:</li>
<pre line="">$ xset +fp ~/.fonts
# fc-cache -fv</pre></li>

<li>Save script as <code>~/.dwm-statusbar.bash</code>:
<a href="https://github.com/w0ng/bin/blob/master/dwm-statusbar" target="_blank">https://github.com/w0ng/bin/blob/master/dwm-statusbar</a></li>

<li>Allow script to be executed:
<pre line="">$ chmod +x ~/.dwm-statusbar.bash</pre></li>

<li>Apply jasonwryan's <a href="http://beta.intuxication.org/hg/jasonwryan/archer/file/322deebe90ff/Build/dwm/statuscolors-6.0.diff" target="_blank">statuscolors-6.0 patch</a></li>

<li>Change font and statuscolors options in <code>dwm/config.h</code>:
<pre line="2" lang="c">
...
/* appearance */
static const char font[]            = "-*-terminus2-medium-r-*-*-12-*-*-*-*-*-*-*";
#define NUMCOLORS 6
static const char colors[NUMCOLORS][ColLast][8] = {
  // border foreground background
  { "#073642", "#657b83", "#002b36" }, // 1 = normal (grey on black)
  { "#b58900", "#eee8d5", "#002b36" }, // 2 = selected (white on black)
  { "#dc322f", "#002b36", "#b58900" }, // 3 = urgent (black on yellow)
  { "#073642", "#839496", "#073642" }, // 4 = lightgrey on brightblack
  { "#073642", "#073642", "#002b36" }, // 5 = brightblack on black
  { "#073642", "#002b36", "#073642" }, // 6 = black on brightblack
};
...</pre>
<li>Add statusbar script to <code>~/.xinitrc</code>:
<pre>~/.dwm-statusbar.bash &amp;</pre>
</li>
<li>Restart X</li>
</ol>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2012-05-01 22:27:55</wp:post_date>
		<wp:post_date_gmt>2012-05-01 11:27:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dwm-a-pretty-statusbar</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dwm"><![CDATA[dwm]]></category>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="post_tag" nicename="pretty"><![CDATA[pretty]]></category>
		<category domain="post_tag" nicename="statusbar"><![CDATA[statusbar]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Irssi </title>
		<link>http://archlinux.me/w0ng/?p=249</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>w0ng</dc:creator>
		<guid isPermaLink="false">http://archlinux.me/w0ng/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2012-05-02 22:56:55</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
